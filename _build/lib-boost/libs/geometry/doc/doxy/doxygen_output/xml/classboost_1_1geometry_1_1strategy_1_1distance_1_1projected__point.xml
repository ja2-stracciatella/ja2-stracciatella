<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="classboost_1_1geometry_1_1strategy_1_1distance_1_1projected__point" kind="class" prot="public">
    <compoundname>boost::geometry::strategy::distance::projected_point</compoundname>
    <includes local="no">distance_projected_point.hpp</includes>
    <innerclass refid="structboost_1_1geometry_1_1strategy_1_1distance_1_1projected__point_1_1calculation__type" prot="public">boost::geometry::strategy::distance::projected_point::calculation_type</innerclass>
    <templateparamlist>
      <param>
        <type>typename CalculationType</type>
        <defval>void</defval>
      </param>
      <param>
        <type>typename Strategy</type>
        <defval><ref refid="classboost_1_1geometry_1_1strategy_1_1distance_1_1pythagoras" kindref="compound">pythagoras</ref>&lt;CalculationType&gt;</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classboost_1_1geometry_1_1strategy_1_1distance_1_1projected__point_1a73f6b43d1a04e576d5b7c9e8ae5eeccc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Point</type>
          </param>
          <param>
            <type>typename PointOfSegment</type>
          </param>
        </templateparamlist>
        <type><ref refid="structboost_1_1geometry_1_1strategy_1_1distance_1_1projected__point_1_1calculation__type" kindref="compound">calculation_type</ref>&lt; Point, PointOfSegment &gt;::type</type>
        <definition>calculation_type&lt;Point, PointOfSegment&gt;::type boost::geometry::strategy::distance::projected_point&lt; CalculationType, Strategy &gt;::apply</definition>
        <argsstring>(Point const &amp;p, PointOfSegment const &amp;p1, PointOfSegment const &amp;p2) const </argsstring>
        <name>apply</name>
        <param>
          <type>Point const &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>PointOfSegment const &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>PointOfSegment const &amp;</type>
          <declname>p2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/boostorg/boost/boost/geometry/strategies/cartesian/distance_projected_point.hpp" line="102" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/strategies/cartesian/distance_projected_point.hpp" bodystart="101" bodyend="161"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Strategy for distance point to segment. </para>    </briefdescription>
    <detaileddescription>
<para>Calculates distance using projected-point method, and (optionally) Pythagoras <simplesect kind="author"><para>Adapted from: <ulink url="http://geometryalgorithms.com/Archive/algorithm_0102/algorithm_0102.htm">http://geometryalgorithms.com/Archive/algorithm_0102/algorithm_0102.htm</ulink> </para></simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>CalculationType</parametername>
</parameternamelist>
<parameterdescription>
<para>numeric type for calculation (e.g. high precision); if [*void] then it is extracted automatically from the coordinate type and (if necessary) promoted to floating point </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Strategy</parametername>
</parameternamelist>
<parameterdescription>
<para>underlying point-point distance strategy </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>Concepts for Strategy:</title><para><itemizedlist>
<listitem><para>cartesian_distance operator(Point,Point) </para></listitem></itemizedlist>
</para></simplesect>
<simplesect kind="note"><para>If the Strategy is a &quot;comparable::pythagoras&quot;, this strategy automatically is a comparable <ref refid="classboost_1_1geometry_1_1strategy_1_1distance_1_1projected__point" kindref="compound">projected_point</ref> strategy (so without sqrt)</para></simplesect>
 <qbk>
[heading See also]
[link geometry.reference.algorithms.distance.distance_3_with_strategy distance (with strategy)]
</qbk>  </para>    </detaileddescription>
    <location file="/home/travis/build/boostorg/boost/boost/geometry/strategies/cartesian/distance_projected_point.hpp" line="76" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/strategies/cartesian/distance_projected_point.hpp" bodystart="75" bodyend="162"/>
    <listofallmembers>
      <member refid="classboost_1_1geometry_1_1strategy_1_1distance_1_1projected__point_1a73f6b43d1a04e576d5b7c9e8ae5eeccc" prot="public" virt="non-virtual"><scope>boost::geometry::strategy::distance::projected_point</scope><name>apply</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
