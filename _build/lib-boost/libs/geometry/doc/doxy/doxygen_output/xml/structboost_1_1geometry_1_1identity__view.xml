<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="structboost_1_1geometry_1_1identity__view" kind="struct" prot="public">
    <compoundname>boost::geometry::identity_view</compoundname>
    <includes local="no">identity_view.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename Range</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structboost_1_1geometry_1_1identity__view_1acd314f9e455947f9a45d8cb8c9cf203b" prot="public" static="no">
        <type>boost::range_iterator&lt; Range const  &gt;::type</type>
        <definition>typedef boost::range_iterator&lt;Range const&gt;::type boost::geometry::identity_view&lt; Range &gt;::const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/boostorg/boost/boost/geometry/views/identity_view.hpp" line="38" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/views/identity_view.hpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structboost_1_1geometry_1_1identity__view_1ab3547e9d964270bd9d688ae92eb02268" prot="public" static="no">
        <type>boost::range_iterator&lt; Range &gt;::type</type>
        <definition>typedef boost::range_iterator&lt;Range&gt;::type boost::geometry::identity_view&lt; Range &gt;::iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/boostorg/boost/boost/geometry/views/identity_view.hpp" line="39" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/views/identity_view.hpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structboost_1_1geometry_1_1identity__view_1ae6331b40f7403ec12710171b49e67561" prot="private" static="no" mutable="no">
        <type>Range &amp;</type>
        <definition>Range&amp; boost::geometry::identity_view&lt; Range &gt;::m_range</definition>
        <argsstring></argsstring>
        <name>m_range</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/boostorg/boost/boost/geometry/views/identity_view.hpp" line="51" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/views/identity_view.hpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structboost_1_1geometry_1_1identity__view_1a6b1fd0ef0c2ec97b320c66435a130a0d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structboost_1_1geometry_1_1identity__view_1acd314f9e455947f9a45d8cb8c9cf203b" kindref="member">const_iterator</ref></type>
        <definition>const_iterator boost::geometry::identity_view&lt; Range &gt;::begin</definition>
        <argsstring>() const </argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/boostorg/boost/boost/geometry/views/identity_view.hpp" line="45" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/views/identity_view.hpp" bodystart="45" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1geometry_1_1identity__view_1a9fff26906845c51f9fe330425c645080" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structboost_1_1geometry_1_1identity__view_1ab3547e9d964270bd9d688ae92eb02268" kindref="member">iterator</ref></type>
        <definition>iterator boost::geometry::identity_view&lt; Range &gt;::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/boostorg/boost/boost/geometry/views/identity_view.hpp" line="48" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/views/identity_view.hpp" bodystart="48" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1geometry_1_1identity__view_1a365f35ec328c829d79e4f429f6a60806" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structboost_1_1geometry_1_1identity__view_1acd314f9e455947f9a45d8cb8c9cf203b" kindref="member">const_iterator</ref></type>
        <definition>const_iterator boost::geometry::identity_view&lt; Range &gt;::end</definition>
        <argsstring>() const </argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/boostorg/boost/boost/geometry/views/identity_view.hpp" line="46" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/views/identity_view.hpp" bodystart="46" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1geometry_1_1identity__view_1a5c082885878d5f19e0c10a55378602bc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structboost_1_1geometry_1_1identity__view_1ab3547e9d964270bd9d688ae92eb02268" kindref="member">iterator</ref></type>
        <definition>iterator boost::geometry::identity_view&lt; Range &gt;::end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/boostorg/boost/boost/geometry/views/identity_view.hpp" line="49" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/views/identity_view.hpp" bodystart="49" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1geometry_1_1identity__view_1a49b233f8ae13c92c3ad0b7f9937dfd6c" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>boost::geometry::identity_view&lt; Range &gt;::identity_view</definition>
        <argsstring>(Range &amp;r)</argsstring>
        <name>identity_view</name>
        <param>
          <type>Range &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/boostorg/boost/boost/geometry/views/identity_view.hpp" line="43" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/views/identity_view.hpp" bodystart="41" bodyend="43"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>View on a range, not modifying anything. </para>    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Range</parametername>
</parameternamelist>
<parameterdescription>
<para>original range </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <location file="/home/travis/build/boostorg/boost/boost/geometry/views/identity_view.hpp" line="37" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/views/identity_view.hpp" bodystart="36" bodyend="52"/>
    <listofallmembers>
      <member refid="structboost_1_1geometry_1_1identity__view_1a6b1fd0ef0c2ec97b320c66435a130a0d" prot="public" virt="non-virtual"><scope>boost::geometry::identity_view</scope><name>begin</name></member>
      <member refid="structboost_1_1geometry_1_1identity__view_1a9fff26906845c51f9fe330425c645080" prot="public" virt="non-virtual"><scope>boost::geometry::identity_view</scope><name>begin</name></member>
      <member refid="structboost_1_1geometry_1_1identity__view_1acd314f9e455947f9a45d8cb8c9cf203b" prot="public" virt="non-virtual"><scope>boost::geometry::identity_view</scope><name>const_iterator</name></member>
      <member refid="structboost_1_1geometry_1_1identity__view_1a365f35ec328c829d79e4f429f6a60806" prot="public" virt="non-virtual"><scope>boost::geometry::identity_view</scope><name>end</name></member>
      <member refid="structboost_1_1geometry_1_1identity__view_1a5c082885878d5f19e0c10a55378602bc" prot="public" virt="non-virtual"><scope>boost::geometry::identity_view</scope><name>end</name></member>
      <member refid="structboost_1_1geometry_1_1identity__view_1a49b233f8ae13c92c3ad0b7f9937dfd6c" prot="public" virt="non-virtual"><scope>boost::geometry::identity_view</scope><name>identity_view</name></member>
      <member refid="structboost_1_1geometry_1_1identity__view_1ab3547e9d964270bd9d688ae92eb02268" prot="public" virt="non-virtual"><scope>boost::geometry::identity_view</scope><name>iterator</name></member>
      <member refid="structboost_1_1geometry_1_1identity__view_1ae6331b40f7403ec12710171b49e67561" prot="private" virt="non-virtual"><scope>boost::geometry::identity_view</scope><name>m_range</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
