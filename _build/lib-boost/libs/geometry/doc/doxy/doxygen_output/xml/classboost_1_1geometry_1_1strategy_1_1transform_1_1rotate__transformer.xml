<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="classboost_1_1geometry_1_1strategy_1_1transform_1_1rotate__transformer" kind="class" prot="public">
    <compoundname>boost::geometry::strategy::transform::rotate_transformer</compoundname>
    <includes local="no">matrix_transformers.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>DegreeOrRadian</declname>
        <defname>DegreeOrRadian</defname>
      </param>
      <param>
        <type>typename</type>
        <declname>CalculationType</declname>
        <defname>CalculationType</defname>
      </param>
      <param>
        <type>std::size_t</type>
        <declname>Dimension1</declname>
        <defname>Dimension1</defname>
      </param>
      <param>
        <type>std::size_t</type>
        <declname>Dimension2</declname>
        <defname>Dimension2</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classboost_1_1geometry_1_1strategy_1_1transform_1_1rotate__transformer_1a221aa2c0b9ef219f6c807406e6134c20" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>boost::geometry::strategy::transform::rotate_transformer&lt; DegreeOrRadian, CalculationType, Dimension1, Dimension2 &gt;::rotate_transformer</definition>
        <argsstring>(CalculationType const &amp;angle)</argsstring>
        <name>rotate_transformer</name>
        <param>
          <type>CalculationType const &amp;</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/boostorg/boost/boost/geometry/strategies/transform/matrix_transformers.hpp" line="409" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/strategies/transform/matrix_transformers.hpp" bodystart="404" bodyend="409"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Strategy for rotate transformation in Cartesian coordinate system. </para>    </briefdescription>
    <detaileddescription>
<para>Rotate rotates a geometry of specified angle about a fixed point (e.g. origin). <simplesect kind="see"><para><ulink url="http://en.wikipedia.org/wiki/Rotation_%28mathematics%29">http://en.wikipedia.org/wiki/Rotation_%28mathematics%29</ulink></para></simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>DegreeOrRadian</parametername>
</parameternamelist>
<parameterdescription>
<para>degree/or/radian, type of rotation angle specification </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>A single angle is needed to specify a rotation in 2D. Not yet in 3D, the 3D version requires special things to allow for rotation around X, Y, Z or arbitrary axis. </para></simplesect>
</para>    </detaileddescription>
    <location file="/home/travis/build/boostorg/boost/boost/geometry/strategies/transform/matrix_transformers.hpp" line="401" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/strategies/transform/matrix_transformers.hpp" bodystart="400" bodyend="410"/>
    <listofallmembers>
      <member refid="classboost_1_1geometry_1_1strategy_1_1transform_1_1rotate__transformer_1a221aa2c0b9ef219f6c807406e6134c20" prot="public" virt="non-virtual"><scope>boost::geometry::strategy::transform::rotate_transformer</scope><name>rotate_transformer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
