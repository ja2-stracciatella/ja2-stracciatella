<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="structboost_1_1geometry_1_1default__comparable__distance__result" kind="struct" prot="public">
    <compoundname>boost::geometry::default_comparable_distance_result</compoundname>
    <basecompoundref refid="structboost_1_1geometry_1_1comparable__distance__result_3_01_geometry1_00_01_geometry2_00_01void_01_4" prot="public" virt="non-virtual">boost::geometry::comparable_distance_result&lt; Geometry1, Geometry2, void &gt;</basecompoundref>
    <includes local="no">default_comparable_distance_result.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename Geometry1</type>
      </param>
      <param>
        <type>typename Geometry2</type>
        <defval>Geometry1</defval>
      </param>
    </templateparamlist>
    <briefdescription>
<para>Meta-function defining return type of comparable_distance function. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="note"><para>The strategy defines the return-type (so this situation is different from length, where distance is sqr/sqrt, but length always squared) </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="157">
        <label>boost::geometry::resolve_strategy::comparable_distance_result&lt; Geometry1, Geometry2, default_strategy &gt;</label>
        <link refid="structboost_1_1geometry_1_1resolve__strategy_1_1comparable__distance__result_3_01_geometry1_00_02149afb863d916b15e010f2a37dcbbd3"/>
        <childnode refid="158" relation="public-inheritance">
        </childnode>
      </node>
      <node id="159">
        <label>boost::geometry::strategy::distance::services::return_type&lt; strategy::distance::services::comparable_type&lt; detail::distance::default_strategy&lt; Geometry1, Geometry2 &gt;::type &gt;::type, point_type&lt; Geometry1 &gt;::type, point_type&lt; Geometry2 &gt;::type &gt;</label>
        <link refid="structboost_1_1geometry_1_1strategy_1_1distance_1_1services_1_1return__type"/>
      </node>
      <node id="156">
        <label>boost::geometry::resolve_variant::comparable_distance_result&lt; Geometry1, Geometry2, default_strategy &gt;</label>
        <link refid="structboost_1_1geometry_1_1resolve__variant_1_1comparable__distance__result"/>
        <childnode refid="157" relation="public-inheritance">
        </childnode>
      </node>
      <node id="153">
        <label>boost::geometry::default_comparable_distance_result&lt; Geometry1, Geometry2 &gt;</label>
        <link refid="structboost_1_1geometry_1_1default__comparable__distance__result"/>
        <childnode refid="154" relation="public-inheritance">
        </childnode>
      </node>
      <node id="155">
        <label>boost::geometry::comparable_distance_result&lt; Geometry1, Geometry2, default_strategy &gt;</label>
        <link refid="structboost_1_1geometry_1_1comparable__distance__result"/>
        <childnode refid="156" relation="public-inheritance">
        </childnode>
      </node>
      <node id="158">
        <label>boost::geometry::resolve_strategy::comparable_distance_result&lt; Geometry1, Geometry2, detail::distance::default_strategy&lt; Geometry1, Geometry2 &gt;::type &gt;</label>
        <link refid="structboost_1_1geometry_1_1resolve__strategy_1_1comparable__distance__result"/>
        <childnode refid="159" relation="public-inheritance">
        </childnode>
      </node>
      <node id="154">
        <label>boost::geometry::comparable_distance_result&lt; Geometry1, Geometry2, void &gt;</label>
        <link refid="structboost_1_1geometry_1_1comparable__distance__result_3_01_geometry1_00_01_geometry2_00_01void_01_4"/>
        <childnode refid="155" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="164">
        <label>boost::geometry::resolve_strategy::comparable_distance_result&lt; Geometry1, Geometry2, default_strategy &gt;</label>
        <link refid="structboost_1_1geometry_1_1resolve__strategy_1_1comparable__distance__result_3_01_geometry1_00_02149afb863d916b15e010f2a37dcbbd3"/>
        <childnode refid="165" relation="public-inheritance">
        </childnode>
      </node>
      <node id="166">
        <label>boost::geometry::strategy::distance::services::return_type&lt; strategy::distance::services::comparable_type&lt; detail::distance::default_strategy&lt; Geometry1, Geometry2 &gt;::type &gt;::type, point_type&lt; Geometry1 &gt;::type, point_type&lt; Geometry2 &gt;::type &gt;</label>
        <link refid="structboost_1_1geometry_1_1strategy_1_1distance_1_1services_1_1return__type"/>
      </node>
      <node id="163">
        <label>boost::geometry::resolve_variant::comparable_distance_result&lt; Geometry1, Geometry2, default_strategy &gt;</label>
        <link refid="structboost_1_1geometry_1_1resolve__variant_1_1comparable__distance__result"/>
        <childnode refid="164" relation="public-inheritance">
        </childnode>
      </node>
      <node id="160">
        <label>boost::geometry::default_comparable_distance_result&lt; Geometry1, Geometry2 &gt;</label>
        <link refid="structboost_1_1geometry_1_1default__comparable__distance__result"/>
        <childnode refid="161" relation="public-inheritance">
        </childnode>
      </node>
      <node id="162">
        <label>boost::geometry::comparable_distance_result&lt; Geometry1, Geometry2, default_strategy &gt;</label>
        <link refid="structboost_1_1geometry_1_1comparable__distance__result"/>
        <childnode refid="163" relation="public-inheritance">
        </childnode>
      </node>
      <node id="165">
        <label>boost::geometry::resolve_strategy::comparable_distance_result&lt; Geometry1, Geometry2, detail::distance::default_strategy&lt; Geometry1, Geometry2 &gt;::type &gt;</label>
        <link refid="structboost_1_1geometry_1_1resolve__strategy_1_1comparable__distance__result"/>
        <childnode refid="166" relation="public-inheritance">
        </childnode>
      </node>
      <node id="161">
        <label>boost::geometry::comparable_distance_result&lt; Geometry1, Geometry2, void &gt;</label>
        <link refid="structboost_1_1geometry_1_1comparable__distance__result_3_01_geometry1_00_01_geometry2_00_01void_01_4"/>
        <childnode refid="162" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/travis/build/boostorg/boost/boost/geometry/strategies/default_comparable_distance_result.hpp" line="37" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/strategies/default_comparable_distance_result.hpp" bodystart="35" bodyend="37"/>
    <listofallmembers>
      <member refid="structboost_1_1geometry_1_1strategy_1_1distance_1_1services_1_1return__type_1aaa63d9f53da472aa093e480ae634b79c" prot="public" virt="non-virtual"><scope>boost::geometry::default_comparable_distance_result</scope><name>BOOST_MPL_ASSERT_MSG</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
