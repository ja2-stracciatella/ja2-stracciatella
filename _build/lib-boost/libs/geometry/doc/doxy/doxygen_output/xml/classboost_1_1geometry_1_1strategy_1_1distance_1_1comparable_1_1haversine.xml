<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="classboost_1_1geometry_1_1strategy_1_1distance_1_1comparable_1_1haversine" kind="class" prot="public">
    <compoundname>boost::geometry::strategy::distance::comparable::haversine</compoundname>
    <includes local="no">distance_haversine.hpp</includes>
    <innerclass refid="structboost_1_1geometry_1_1strategy_1_1distance_1_1comparable_1_1haversine_1_1calculation__type" prot="public">boost::geometry::strategy::distance::comparable::haversine::calculation_type</innerclass>
    <templateparamlist>
      <param>
        <type>typename RadiusType</type>
      </param>
      <param>
        <type>typename CalculationType</type>
        <defval>void</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classboost_1_1geometry_1_1strategy_1_1distance_1_1comparable_1_1haversine_1aaec822fdb7065152ae1a9004657eb698" prot="public" static="no">
        <type>RadiusType</type>
        <definition>typedef RadiusType boost::geometry::strategy::distance::comparable::haversine&lt; RadiusType, CalculationType &gt;::radius_type</definition>
        <argsstring></argsstring>
        <name>radius_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/boostorg/boost/boost/geometry/strategies/spherical/distance_haversine.hpp" line="62" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/strategies/spherical/distance_haversine.hpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classboost_1_1geometry_1_1strategy_1_1distance_1_1comparable_1_1haversine_1a03a2eea151c8c69310446f783cf3b0f1" prot="private" static="no" mutable="no">
        <type>RadiusType</type>
        <definition>RadiusType boost::geometry::strategy::distance::comparable::haversine&lt; RadiusType, CalculationType &gt;::m_radius</definition>
        <argsstring></argsstring>
        <name>m_radius</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/boostorg/boost/boost/geometry/strategies/spherical/distance_haversine.hpp" line="93" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/strategies/spherical/distance_haversine.hpp" bodystart="93" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classboost_1_1geometry_1_1strategy_1_1distance_1_1comparable_1_1haversine_1a720fc22df54dc65cb5b5d5c5ccb79bdf" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>boost::geometry::strategy::distance::comparable::haversine&lt; RadiusType, CalculationType &gt;::haversine</definition>
        <argsstring>(RadiusType const &amp;r=1.0)</argsstring>
        <name>haversine</name>
        <param>
          <type>RadiusType const &amp;</type>
          <declname>r</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/boostorg/boost/boost/geometry/strategies/spherical/distance_haversine.hpp" line="66" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/strategies/spherical/distance_haversine.hpp" bodystart="64" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classboost_1_1geometry_1_1strategy_1_1distance_1_1comparable_1_1haversine_1a5fb104771ca24d3ac6fca69c412a816f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>RadiusType</type>
        <definition>RadiusType boost::geometry::strategy::distance::comparable::haversine&lt; RadiusType, CalculationType &gt;::radius</definition>
        <argsstring>() const </argsstring>
        <name>radius</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/boostorg/boost/boost/geometry/strategies/spherical/distance_haversine.hpp" line="79" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/strategies/spherical/distance_haversine.hpp" bodystart="78" bodyend="81"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classboost_1_1geometry_1_1strategy_1_1distance_1_1comparable_1_1haversine_1a496de9fd8383b5f0a155173e9a408277" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Point1</type>
          </param>
          <param>
            <type>typename Point2</type>
          </param>
        </templateparamlist>
        <type><ref refid="structboost_1_1geometry_1_1strategy_1_1distance_1_1comparable_1_1haversine_1_1calculation__type" kindref="compound">calculation_type</ref>&lt; Point1, Point2 &gt;::type</type>
        <definition>static calculation_type&lt;Point1, Point2&gt;::type boost::geometry::strategy::distance::comparable::haversine&lt; RadiusType, CalculationType &gt;::apply</definition>
        <argsstring>(Point1 const &amp;p1, Point2 const &amp;p2)</argsstring>
        <name>apply</name>
        <param>
          <type>Point1 const &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>Point2 const &amp;</type>
          <declname>p2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/boostorg/boost/boost/geometry/strategies/spherical/distance_haversine.hpp" line="71" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/strategies/spherical/distance_haversine.hpp" bodystart="70" bodyend="76"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classboost_1_1geometry_1_1strategy_1_1distance_1_1comparable_1_1haversine_1aefaf59393ae0cc630aa1a41a249c9941" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename R</type>
          </param>
          <param>
            <type>typename T1</type>
          </param>
          <param>
            <type>typename T2</type>
          </param>
        </templateparamlist>
        <type>R</type>
        <definition>static R boost::geometry::strategy::distance::comparable::haversine&lt; RadiusType, CalculationType &gt;::calculate</definition>
        <argsstring>(T1 const &amp;lon1, T1 const &amp;lat1, T2 const &amp;lon2, T2 const &amp;lat2)</argsstring>
        <name>calculate</name>
        <param>
          <type>T1 const &amp;</type>
          <declname>lon1</declname>
        </param>
        <param>
          <type>T1 const &amp;</type>
          <declname>lat1</declname>
        </param>
        <param>
          <type>T2 const &amp;</type>
          <declname>lon2</declname>
        </param>
        <param>
          <type>T2 const &amp;</type>
          <declname>lat2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/boostorg/boost/boost/geometry/strategies/spherical/distance_haversine.hpp" line="88" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/strategies/spherical/distance_haversine.hpp" bodystart="86" bodyend="91"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/travis/build/boostorg/boost/boost/geometry/strategies/spherical/distance_haversine.hpp" line="47" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/strategies/spherical/distance_haversine.hpp" bodystart="46" bodyend="94"/>
    <listofallmembers>
      <member refid="classboost_1_1geometry_1_1strategy_1_1distance_1_1comparable_1_1haversine_1a496de9fd8383b5f0a155173e9a408277" prot="public" virt="non-virtual"><scope>boost::geometry::strategy::distance::comparable::haversine</scope><name>apply</name></member>
      <member refid="classboost_1_1geometry_1_1strategy_1_1distance_1_1comparable_1_1haversine_1aefaf59393ae0cc630aa1a41a249c9941" prot="private" virt="non-virtual"><scope>boost::geometry::strategy::distance::comparable::haversine</scope><name>calculate</name></member>
      <member refid="classboost_1_1geometry_1_1strategy_1_1distance_1_1comparable_1_1haversine_1a720fc22df54dc65cb5b5d5c5ccb79bdf" prot="public" virt="non-virtual"><scope>boost::geometry::strategy::distance::comparable::haversine</scope><name>haversine</name></member>
      <member refid="classboost_1_1geometry_1_1strategy_1_1distance_1_1comparable_1_1haversine_1a03a2eea151c8c69310446f783cf3b0f1" prot="private" virt="non-virtual"><scope>boost::geometry::strategy::distance::comparable::haversine</scope><name>m_radius</name></member>
      <member refid="classboost_1_1geometry_1_1strategy_1_1distance_1_1comparable_1_1haversine_1a5fb104771ca24d3ac6fca69c412a816f" prot="public" virt="non-virtual"><scope>boost::geometry::strategy::distance::comparable::haversine</scope><name>radius</name></member>
      <member refid="classboost_1_1geometry_1_1strategy_1_1distance_1_1comparable_1_1haversine_1aaec822fdb7065152ae1a9004657eb698" prot="public" virt="non-virtual"><scope>boost::geometry::strategy::distance::comparable::haversine</scope><name>radius_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
