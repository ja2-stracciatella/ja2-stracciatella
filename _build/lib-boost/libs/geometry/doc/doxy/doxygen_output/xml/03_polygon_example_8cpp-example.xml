<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="03_polygon_example_8cpp-example" kind="example">
    <compoundname>03_polygon_example.cpp</compoundname>
    <detaileddescription>
<para>The polygon example shows some examples of what can be done with polygons in the Generic Geometry Library: the outer ring and the inner rings how to calculate the area of a polygon how to get the centroid, and how to get an often more interesting label point how to correct the polygon such that it is clockwise and closed within: the well-known point in polygon algorithm how to use polygons which use another container, or which use different containers for points and for inner rings how polygons can be intersected, or clipped, using a clipping box</para><para>The illustrations below show the usage of the within algorithm and the intersection algorithm.</para><para>The within algorithm results in true if a point lies completly within a polygon. If it lies exactly on a border it is not considered as within and if it is inside a hole it is also not within the polygon. This is illustrated below, where only the point in the middle is within the polygon.</para><para><image type="html" name="within_polygon.png"></image>
</para><para>The clipping algorithm, called intersection, is illustrated below:</para><para><image type="html" name="clip_polygon.png"></image>
</para><para>The yellow polygon, containing a hole, is clipped with the blue rectangle, resulting in a multi_polygon of three polygons, drawn in red. The hole is vanished.</para><para>include polygon_example.cpp <programlisting><codeline><highlight class="comment">//<sp/>Boost.Geometry<sp/>(aka<sp/>GGL,<sp/>Generic<sp/>Geometry<sp/>Library)</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2007-2012<sp/>Barend<sp/>Gehrels,<sp/>Amsterdam,<sp/>the<sp/>Netherlands.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2008-2012<sp/>Bruno<sp/>Lalande,<sp/>Paris,<sp/>France.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2009-2012<sp/>Mateusz<sp/>Loskot,<sp/>London,<sp/>UK.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use,<sp/>modification<sp/>and<sp/>distribution<sp/>is<sp/>subject<sp/>to<sp/>the<sp/>Boost<sp/>Software<sp/>License,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Version<sp/>1.0.<sp/>(See<sp/>accompanying<sp/>file<sp/>LICENSE_1_0.txt<sp/>or<sp/>copy<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.boost.org/LICENSE_1_0.txt)</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Polygon<sp/>Example</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>for<sp/>reverse,<sp/>unique</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/geometry/geometry.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="point__xy_8hpp" kindref="compound">boost/geometry/geometries/point_xy.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="geometries_2polygon_8hpp" kindref="compound">boost/geometry/geometries/polygon.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="c__array_8hpp" kindref="compound">boost/geometry/geometries/adapted/c_array.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="multi__polygon_8hpp" kindref="compound">boost/geometry/geometries/multi_polygon.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="c__array_8hpp_1a815278dd46c0e0cbb9188150ef5305a9" kindref="member">BOOST_GEOMETRY_REGISTER_C_ARRAY_CS</ref>(cs::cartesian)</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">std::</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>boolstr(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>v)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">boost::geometry;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classboost_1_1geometry_1_1model_1_1d2_1_1point__xy" kindref="compound" tooltip="2D point in Cartesian coordinate system">model::d2::point_xy&lt;double&gt;</ref><sp/>point_2d;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classboost_1_1geometry_1_1model_1_1polygon" kindref="compound" tooltip="The polygon contains an outer ring and zero or more inner rings.">model::polygon&lt;point_2d&gt;</ref><sp/>polygon_2d;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classboost_1_1geometry_1_1model_1_1box" kindref="compound" tooltip="Class box: defines a box made of two describing points.">model::box&lt;point_2d&gt;</ref><sp/>box_2d;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Define<sp/>a<sp/>polygon<sp/>and<sp/>fill<sp/>the<sp/>outer<sp/>ring.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>most<sp/>cases<sp/>you<sp/>will<sp/>read<sp/>it<sp/>from<sp/>a<sp/>file<sp/>or<sp/>database</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>polygon_2d<sp/>poly;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>coor[][2]<sp/>=<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{2.0,<sp/>1.3},<sp/>{2.4,<sp/>1.7},<sp/>{2.8,<sp/>1.8},<sp/>{3.4,<sp/>1.2},<sp/>{3.7,<sp/>1.6},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{3.4,<sp/>2.0},<sp/>{4.1,<sp/>3.0},<sp/>{5.3,<sp/>2.6},<sp/>{5.4,<sp/>1.2},<sp/>{4.9,<sp/>0.8},<sp/>{2.9,<sp/>0.7},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{2.0,<sp/>1.3}<sp/></highlight><highlight class="comment">//<sp/>closing<sp/>point<sp/>is<sp/>opening<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__assign_1ga1fdbc43645872ba459c455318706a925" kindref="member" tooltip="Assign a range of points to a linestring, ring or polygon.">assign_points</ref>(poly,<sp/>coor);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Polygons<sp/>should<sp/>be<sp/>closed,<sp/>and<sp/>directed<sp/>clockwise.<sp/>If<sp/>you&apos;re<sp/>not<sp/>sure<sp/>if<sp/>that<sp/>is<sp/>the<sp/>case,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>call<sp/>the<sp/>correct<sp/>algorithm</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__correct_1gaf14641937f187af33fec6bd99c8202d9" kindref="member" tooltip="Corrects a geometry.">correct</ref>(poly);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Polygons<sp/>can<sp/>be<sp/>streamed<sp/>as<sp/>text</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(or<sp/>more<sp/>precisely:<sp/>as<sp/>DSV<sp/>(delimiter<sp/>separated<sp/>values))</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>dsv(poly)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>As<sp/>with<sp/>lines,<sp/>bounding<sp/>box<sp/>of<sp/>polygons<sp/>can<sp/>be<sp/>calculated</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>box_2d<sp/>b;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__envelope_1gac1f1865a7b36047d44949e17266d8f5a" kindref="member" tooltip="Calculates the envelope of a geometry.">envelope</ref>(poly,<sp/>b);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>dsv(b)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>area<sp/>of<sp/>the<sp/>polygon<sp/>can<sp/>be<sp/>calulated</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;area:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="group__area_1gaf7a1c34467f74f290d0b090adb27db62" kindref="member" tooltip="Calculates the area of a geometry.">area</ref>(poly)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>And<sp/>the<sp/>centroid,<sp/>which<sp/>is<sp/>the<sp/>center<sp/>of<sp/>gravity</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>point_2d<sp/>cent;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__centroid_1ga3ec2c5e245c42ffaf28f1c88ea564c8c" kindref="member" tooltip="Calculates the centroid of a geometry using the specified strategy.">centroid</ref>(poly,<sp/>cent);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;centroid:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>dsv(cent)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>number<sp/>of<sp/>points<sp/>can<sp/>be<sp/>requested<sp/>per<sp/>ring<sp/>(using<sp/>.size())</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>or<sp/>per<sp/>polygon<sp/>(using<sp/>num_points)</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;number<sp/>of<sp/>points<sp/>in<sp/>outer<sp/>ring:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>poly.outer().size()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Polygons<sp/>can<sp/>have<sp/>one<sp/>or<sp/>more<sp/>inner<sp/>rings,<sp/>also<sp/>called<sp/>holes,<sp/>islands,<sp/>interior<sp/>rings.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Let&apos;s<sp/>add<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>poly.inners().resize(1);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classboost_1_1geometry_1_1model_1_1ring" kindref="compound" tooltip="A ring (aka linear ring) is a closed line which should not be selfintersecting.">model::ring&lt;point_2d&gt;</ref>&amp;<sp/>inner<sp/>=<sp/>poly.inners().back();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>coor[][2]<sp/>=<sp/>{<sp/>{4.0,<sp/>2.0},<sp/>{4.2,<sp/>1.4},<sp/>{4.8,<sp/>1.9},<sp/>{4.4,<sp/>2.2},<sp/>{4.0,<sp/>2.0}<sp/>};</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__assign_1ga1fdbc43645872ba459c455318706a925" kindref="member" tooltip="Assign a range of points to a linestring, ring or polygon.">assign_points</ref>(inner,<sp/>coor);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__correct_1gaf14641937f187af33fec6bd99c8202d9" kindref="member" tooltip="Corrects a geometry.">correct</ref>(poly);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;with<sp/>inner<sp/>ring:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>dsv(poly)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>area<sp/>of<sp/>the<sp/>polygon<sp/>is<sp/>changed<sp/>of<sp/>course</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;new<sp/>area<sp/>of<sp/>polygon:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="group__area_1gaf7a1c34467f74f290d0b090adb27db62" kindref="member" tooltip="Calculates the area of a geometry.">area</ref>(poly)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__centroid_1ga3ec2c5e245c42ffaf28f1c88ea564c8c" kindref="member" tooltip="Calculates the centroid of a geometry using the specified strategy.">centroid</ref>(poly,<sp/>cent);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;new<sp/>centroid:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>dsv(cent)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>You<sp/>can<sp/>test<sp/>whether<sp/>points<sp/>are<sp/>within<sp/>a<sp/>polygon</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;point<sp/>in<sp/>polygon:&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>p1:<sp/>&quot;</highlight><highlight class="normal"><sp/><sp/>&lt;&lt;<sp/>boolstr(<ref refid="group__within_1gaf8f597c0a7352f0a6808944db2a549b7" kindref="member" tooltip="Checks if the first geometry is completely inside the second geometry.">within</ref>(make&lt;point_2d&gt;(3.0,<sp/>2.0),<sp/>poly))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>p2:<sp/>&quot;</highlight><highlight class="normal"><sp/><sp/>&lt;&lt;<sp/>boolstr(<ref refid="group__within_1gaf8f597c0a7352f0a6808944db2a549b7" kindref="member" tooltip="Checks if the first geometry is completely inside the second geometry.">within</ref>(make&lt;point_2d&gt;(3.7,<sp/>2.0),<sp/>poly))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>p3:<sp/>&quot;</highlight><highlight class="normal"><sp/><sp/>&lt;&lt;<sp/>boolstr(<ref refid="group__within_1gaf8f597c0a7352f0a6808944db2a549b7" kindref="member" tooltip="Checks if the first geometry is completely inside the second geometry.">within</ref>(make&lt;point_2d&gt;(4.4,<sp/>2.0),<sp/>poly))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>As<sp/>with<sp/>linestrings<sp/>and<sp/>points,<sp/>you<sp/>can<sp/>derive<sp/>from<sp/>polygon<sp/>to<sp/>add,<sp/>for<sp/>example,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fill<sp/>color<sp/>and<sp/>stroke<sp/>color.<sp/>Or<sp/>SRID<sp/>(spatial<sp/>reference<sp/>ID).<sp/>Or<sp/>Z-value.<sp/>Or<sp/>a<sp/>property<sp/>map.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>don&apos;t<sp/>show<sp/>this<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clip<sp/>the<sp/>polygon<sp/>using<sp/>a<sp/>box</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>box_2d<sp/>cb(make&lt;point_2d&gt;(1.5,<sp/>1.5),<sp/>make&lt;point_2d&gt;(4.5,<sp/>2.5));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;polygon_2d&gt;<sp/>polygon_list;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>polygon_list<sp/>v;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__intersection_1gac78b88e0ea7af3453a626a0e6fc588d7" kindref="member" tooltip="Calculate the intersection of two geometries.">intersection</ref>(cb,<sp/>poly,<sp/>v);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Clipped<sp/>output<sp/>polygons&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(polygon_list::const_iterator<sp/>it<sp/>=<sp/>v.begin();<sp/>it<sp/>!=<sp/>v.end();<sp/>++it)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>dsv(*it)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classboost_1_1geometry_1_1model_1_1multi__polygon" kindref="compound" tooltip="multi_polygon, a collection of polygons">model::multi_polygon&lt;polygon_2d&gt;</ref><sp/>polygon_set;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>polygon_set<sp/>ps;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__union_1gaa300b8994725c85cc71b304713a75501" kindref="member" tooltip="Combines two geometries which each other.">union_</ref>(cb,<sp/>poly,<sp/>ps);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>polygon_2d<sp/>hull;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceboost_1_1geometry_1a5f0f6e4d01982d810d1ad1c1817521cb" kindref="member">convex_hull</ref>(poly,<sp/>hull);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Convex<sp/>hull:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>dsv(hull)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>you<sp/>really<sp/>want:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>You<sp/>don&apos;t<sp/>have<sp/>to<sp/>use<sp/>a<sp/>vector,<sp/>you<sp/>can<sp/>define<sp/>a<sp/>polygon<sp/>with<sp/>a<sp/>deque</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>You<sp/>can<sp/>specify<sp/>the<sp/>container<sp/>for<sp/>the<sp/>points<sp/>and<sp/>for<sp/>the<sp/>inner<sp/>rings<sp/>independantly</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classboost_1_1geometry_1_1model_1_1polygon" kindref="compound" tooltip="The polygon contains an outer ring and zero or more inner rings.">model::polygon&lt;point_2d, true, true, std::deque, std::deque&gt;</ref><sp/>deque_polygon;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>deque_polygon<sp/>poly2;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structboost_1_1geometry_1_1ring__type_1a009cf4da9da6576d9733537a6e4d9ed6" kindref="member">ring_type&lt;deque_polygon&gt;::type</ref>&amp;<sp/>ring<sp/>=<sp/><ref refid="group__exterior__ring_1ga08713d51a3bbe530a5f69b5084107d89" kindref="member" tooltip="Function to get the exterior_ring ring of a polygon.">exterior_ring</ref>(poly2);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__append_1gaa3a95c7738229a30f77562cb095b3699" kindref="member" tooltip="Appends one or more points to a linestring, ring, polygon, multi-geometry.">append</ref>(ring,<sp/>make&lt;point_2d&gt;(2.8,<sp/>1.9));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__append_1gaa3a95c7738229a30f77562cb095b3699" kindref="member" tooltip="Appends one or more points to a linestring, ring, polygon, multi-geometry.">append</ref>(ring,<sp/>make&lt;point_2d&gt;(2.9,<sp/>2.4));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__append_1gaa3a95c7738229a30f77562cb095b3699" kindref="member" tooltip="Appends one or more points to a linestring, ring, polygon, multi-geometry.">append</ref>(ring,<sp/>make&lt;point_2d&gt;(3.3,<sp/>2.2));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__append_1gaa3a95c7738229a30f77562cb095b3699" kindref="member" tooltip="Appends one or more points to a linestring, ring, polygon, multi-geometry.">append</ref>(ring,<sp/>make&lt;point_2d&gt;(3.2,<sp/>1.8));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__append_1gaa3a95c7738229a30f77562cb095b3699" kindref="member" tooltip="Appends one or more points to a linestring, ring, polygon, multi-geometry.">append</ref>(ring,<sp/>make&lt;point_2d&gt;(2.8,<sp/>1.9));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>dsv(poly2)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>    </detaileddescription>
  </compounddef>
</doxygen>
