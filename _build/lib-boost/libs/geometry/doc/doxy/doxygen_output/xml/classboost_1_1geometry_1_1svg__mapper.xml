<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="classboost_1_1geometry_1_1svg__mapper" kind="class" prot="public">
    <compoundname>boost::geometry::svg_mapper</compoundname>
    <includes local="no">svg_mapper.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>Point</declname>
        <defname>Point</defname>
      </param>
      <param>
        <type>bool</type>
        <declname>SameScale</declname>
        <defname>SameScale</defname>
        <defval>true</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classboost_1_1geometry_1_1svg__mapper_1a5719d8f80905c517a64d21d480fd1865" prot="private" static="no">
        <type><ref refid="structboost_1_1geometry_1_1select__most__precise" kindref="compound">geometry::select_most_precise</ref>&lt; typename <ref refid="structboost_1_1geometry_1_1coordinate__type" kindref="compound">coordinate_type</ref>&lt; Point &gt;::type, double &gt;::type</type>
        <definition>typedef geometry::select_most_precise&lt; typename coordinate_type&lt;Point&gt;::type, double &gt;::type boost::geometry::svg_mapper&lt; Point, SameScale &gt;::calculation_type</definition>
        <argsstring></argsstring>
        <name>calculation_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/boostorg/boost/boost/geometry/io/svg/svg_mapper.hpp" line="231" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/io/svg/svg_mapper.hpp" bodystart="231" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classboost_1_1geometry_1_1svg__mapper_1ac7d480fb03f3df63baa268c2a5c88d40" prot="private" static="no">
        <type><ref refid="classboost_1_1geometry_1_1strategy_1_1transform_1_1map__transformer" kindref="compound">strategy::transform::map_transformer</ref>&lt; calculation_type, <ref refid="structboost_1_1geometry_1_1dimension" kindref="compound">geometry::dimension</ref>&lt; Point &gt;::type::value, <ref refid="structboost_1_1geometry_1_1dimension" kindref="compound">geometry::dimension</ref>&lt; Point &gt;::type::value, true, SameScale &gt;</type>
        <definition>typedef strategy::transform::map_transformer&lt; calculation_type, geometry::dimension&lt;Point&gt;::type::value, geometry::dimension&lt;Point&gt;::type::value, true, SameScale &gt; boost::geometry::svg_mapper&lt; Point, SameScale &gt;::transformer_type</definition>
        <argsstring></argsstring>
        <name>transformer_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/boostorg/boost/boost/geometry/io/svg/svg_mapper.hpp" line="240" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/io/svg/svg_mapper.hpp" bodystart="240" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classboost_1_1geometry_1_1svg__mapper_1a24e20a0421bc8cce2619a326e66f3dc9" prot="private" static="no" mutable="no">
        <type><ref refid="classboost_1_1geometry_1_1model_1_1box" kindref="compound">model::box</ref>&lt; Point &gt;</type>
        <definition>model::box&lt;Point&gt; boost::geometry::svg_mapper&lt; Point, SameScale &gt;::m_bounding_box</definition>
        <argsstring></argsstring>
        <name>m_bounding_box</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/boostorg/boost/boost/geometry/io/svg/svg_mapper.hpp" line="242" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/io/svg/svg_mapper.hpp" bodystart="242" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classboost_1_1geometry_1_1svg__mapper_1ac328db109a364f77cadec5e53a35ae08" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int boost::geometry::svg_mapper&lt; Point, SameScale &gt;::m_height</definition>
        <argsstring></argsstring>
        <name>m_height</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/boostorg/boost/boost/geometry/io/svg/svg_mapper.hpp" line="245" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/io/svg/svg_mapper.hpp" bodystart="245" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classboost_1_1geometry_1_1svg__mapper_1ad5661b7c29056aeaa449e0e5787c77e6" prot="private" static="no" mutable="no">
        <type>boost::scoped_ptr&lt; <ref refid="classboost_1_1geometry_1_1strategy_1_1transform_1_1map__transformer" kindref="compound">transformer_type</ref> &gt;</type>
        <definition>boost::scoped_ptr&lt;transformer_type&gt; boost::geometry::svg_mapper&lt; Point, SameScale &gt;::m_matrix</definition>
        <argsstring></argsstring>
        <name>m_matrix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/boostorg/boost/boost/geometry/io/svg/svg_mapper.hpp" line="243" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/io/svg/svg_mapper.hpp" bodystart="243" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classboost_1_1geometry_1_1svg__mapper_1ab06a1c6d4b2b8f01c461e3575062da7b" prot="private" static="no" mutable="no">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; boost::geometry::svg_mapper&lt; Point, SameScale &gt;::m_stream</definition>
        <argsstring></argsstring>
        <name>m_stream</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/boostorg/boost/boost/geometry/io/svg/svg_mapper.hpp" line="244" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/io/svg/svg_mapper.hpp" bodystart="244" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classboost_1_1geometry_1_1svg__mapper_1a267599519487172c1f334b8854df3403" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int boost::geometry::svg_mapper&lt; Point, SameScale &gt;::m_width</definition>
        <argsstring></argsstring>
        <name>m_width</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/boostorg/boost/boost/geometry/io/svg/svg_mapper.hpp" line="245" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/io/svg/svg_mapper.hpp" bodystart="245" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classboost_1_1geometry_1_1svg__mapper_1a06741077c3fd3f658e54144617983882" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string boost::geometry::svg_mapper&lt; Point, SameScale &gt;::m_width_height</definition>
        <argsstring></argsstring>
        <name>m_width_height</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/boostorg/boost/boost/geometry/io/svg/svg_mapper.hpp" line="246" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/io/svg/svg_mapper.hpp" bodystart="246" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classboost_1_1geometry_1_1svg__mapper_1a526b1731204b605505516a60f34fedd7" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void boost::geometry::svg_mapper&lt; Point, SameScale &gt;::init_matrix</definition>
        <argsstring>()</argsstring>
        <name>init_matrix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/boostorg/boost/boost/geometry/io/svg/svg_mapper.hpp" line="249" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/io/svg/svg_mapper.hpp" bodystart="248" bodyend="270"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classboost_1_1geometry_1_1svg__mapper_1a9a13440addb74e26c93836a68c19c0e5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Geometry</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void boost::geometry::svg_mapper&lt; Point, SameScale &gt;::add</definition>
        <argsstring>(Geometry const &amp;geometry)</argsstring>
        <name>add</name>
        <param>
          <type>Geometry const &amp;</type>
          <declname>geometry</declname>
        </param>
        <briefdescription>
<para>Adds a geometry to the transformation matrix. After doing this, the specified geometry can be mapped fully into the SVG map. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Geometry</parametername>
</parameternamelist>
<parameterdescription>
<para>Any type fulfilling a Geometry Concept </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>geometry</parametername>
</parameternamelist>
<parameterdescription>
<para>A model of the specified concept </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/boostorg/boost/boost/geometry/io/svg/svg_mapper.hpp" line="308" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/io/svg/svg_mapper.hpp" bodystart="307" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="classboost_1_1geometry_1_1svg__mapper_1a535a0b5ff10e3f0d31d0e34caf83d368" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Geometry</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void boost::geometry::svg_mapper&lt; Point, SameScale &gt;::map</definition>
        <argsstring>(Geometry const &amp;geometry, std::string const &amp;style, int size=-1)</argsstring>
        <name>map</name>
        <param>
          <type>Geometry const &amp;</type>
          <declname>geometry</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>style</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
<para>Maps a geometry into the SVG map using the specified style. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Geometry</parametername>
</parameternamelist>
<parameterdescription>
<para>Any type fulfilling a Geometry Concept </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>geometry</parametername>
</parameternamelist>
<parameterdescription>
<para>A model of the specified concept </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>style</parametername>
</parameternamelist>
<parameterdescription>
<para>String containing verbatim SVG style information </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional size (used for SVG points) in SVG pixels. For linestrings, specify linewidth in the SVG style information </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/boostorg/boost/boost/geometry/io/svg/svg_mapper.hpp" line="330" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/io/svg/svg_mapper.hpp" bodystart="328" bodyend="333"/>
      </memberdef>
      <memberdef kind="function" id="classboost_1_1geometry_1_1svg__mapper_1a72c7f08c7d6a03479758c12810a8fc53" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>boost::geometry::svg_mapper&lt; Point, SameScale &gt;::svg_mapper</definition>
        <argsstring>(std::ostream &amp;stream, int width, int height, std::string const &amp;width_height=&quot;width=\&quot;100%\&quot; height=\&quot;100%\&quot;&quot;)</argsstring>
        <name>svg_mapper</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>width_height</declname>
          <defval>&quot;width=\&quot;100%\&quot; height=\&quot;100%\&quot;&quot;</defval>
        </param>
        <briefdescription>
<para>Constructor, initializing the SVG map. Opens and initializes the SVG. Should be called explicitly. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stream</parametername>
</parameternamelist>
<parameterdescription>
<para>Output stream, should be a stream already open </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>Width of the SVG map (in SVG pixels) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>Height of the SVG map (in SVG pixels) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width_height</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional information to increase width and/or height </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/boostorg/boost/boost/geometry/io/svg/svg_mapper.hpp" line="288" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/io/svg/svg_mapper.hpp" bodystart="282" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="classboost_1_1geometry_1_1svg__mapper_1a20890c91dcb47bef38356d81b8abcef9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TextPoint</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void boost::geometry::svg_mapper&lt; Point, SameScale &gt;::text</definition>
        <argsstring>(TextPoint const &amp;point, std::string const &amp;s, std::string const &amp;style, int offset_x=0, int offset_y=0, int lineheight=10)</argsstring>
        <name>text</name>
        <param>
          <type>TextPoint const &amp;</type>
          <declname>point</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>style</declname>
        </param>
        <param>
          <type>int</type>
          <declname>offset_x</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>offset_y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>lineheight</declname>
          <defval>10</defval>
        </param>
        <briefdescription>
<para>Adds a text to the SVG map. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TextPoint</parametername>
</parameternamelist>
<parameterdescription>
<para>Any type fulfilling a Point Concept </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>point</parametername>
</parameternamelist>
<parameterdescription>
<para>Location of the text (in map units) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The text itself </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>style</parametername>
</parameternamelist>
<parameterdescription>
<para>String containing verbatim SVG style information, of the text </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset_x</parametername>
</parameternamelist>
<parameterdescription>
<para>Offset in SVG pixels, defaults to 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset_y</parametername>
</parameternamelist>
<parameterdescription>
<para>Offset in SVG pixels, defaults to 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lineheight</parametername>
</parameternamelist>
<parameterdescription>
<para>Line height in SVG pixels, in case the text contains <linebreak/>
 </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/boostorg/boost/boost/geometry/io/svg/svg_mapper.hpp" line="349" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/io/svg/svg_mapper.hpp" bodystart="346" bodyend="382"/>
      </memberdef>
      <memberdef kind="function" id="classboost_1_1geometry_1_1svg__mapper_1a64268b19bdbeda5f55a83af7e355a4c3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual boost::geometry::svg_mapper&lt; Point, SameScale &gt;::~svg_mapper</definition>
        <argsstring>()</argsstring>
        <name>~svg_mapper</name>
        <briefdescription>
<para>Destructor, called automatically. Closes the SVG by streaming &lt;\/svg&gt; </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/boostorg/boost/boost/geometry/io/svg/svg_mapper.hpp" line="296" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/io/svg/svg_mapper.hpp" bodystart="295" bodyend="298"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Helper class to create SVG maps. </para>    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Point</parametername>
</parameternamelist>
<parameterdescription>
<para>Point type, for input geometries. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>SameScale</parametername>
</parameternamelist>
<parameterdescription>
<para>Boolean flag indicating if horizontal and vertical scale should be the same. The default value is true</para></parameterdescription>
</parameteritem>
</parameterlist>
 <qbk>[include reference/io/svg.qbk]</qbk>  </para>    </detaileddescription>
    <location file="/home/travis/build/boostorg/boost/boost/geometry/io/svg/svg_mapper.hpp" line="226" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/io/svg/svg_mapper.hpp" bodystart="225" bodyend="383"/>
    <listofallmembers>
      <member refid="classboost_1_1geometry_1_1svg__mapper_1a9a13440addb74e26c93836a68c19c0e5" prot="public" virt="non-virtual"><scope>boost::geometry::svg_mapper</scope><name>add</name></member>
      <member refid="classboost_1_1geometry_1_1svg__mapper_1a5719d8f80905c517a64d21d480fd1865" prot="private" virt="non-virtual"><scope>boost::geometry::svg_mapper</scope><name>calculation_type</name></member>
      <member refid="classboost_1_1geometry_1_1svg__mapper_1a526b1731204b605505516a60f34fedd7" prot="private" virt="non-virtual"><scope>boost::geometry::svg_mapper</scope><name>init_matrix</name></member>
      <member refid="classboost_1_1geometry_1_1svg__mapper_1a24e20a0421bc8cce2619a326e66f3dc9" prot="private" virt="non-virtual"><scope>boost::geometry::svg_mapper</scope><name>m_bounding_box</name></member>
      <member refid="classboost_1_1geometry_1_1svg__mapper_1ac328db109a364f77cadec5e53a35ae08" prot="private" virt="non-virtual"><scope>boost::geometry::svg_mapper</scope><name>m_height</name></member>
      <member refid="classboost_1_1geometry_1_1svg__mapper_1ad5661b7c29056aeaa449e0e5787c77e6" prot="private" virt="non-virtual"><scope>boost::geometry::svg_mapper</scope><name>m_matrix</name></member>
      <member refid="classboost_1_1geometry_1_1svg__mapper_1ab06a1c6d4b2b8f01c461e3575062da7b" prot="private" virt="non-virtual"><scope>boost::geometry::svg_mapper</scope><name>m_stream</name></member>
      <member refid="classboost_1_1geometry_1_1svg__mapper_1a267599519487172c1f334b8854df3403" prot="private" virt="non-virtual"><scope>boost::geometry::svg_mapper</scope><name>m_width</name></member>
      <member refid="classboost_1_1geometry_1_1svg__mapper_1a06741077c3fd3f658e54144617983882" prot="private" virt="non-virtual"><scope>boost::geometry::svg_mapper</scope><name>m_width_height</name></member>
      <member refid="classboost_1_1geometry_1_1svg__mapper_1a535a0b5ff10e3f0d31d0e34caf83d368" prot="public" virt="non-virtual"><scope>boost::geometry::svg_mapper</scope><name>map</name></member>
      <member refid="classboost_1_1geometry_1_1svg__mapper_1a72c7f08c7d6a03479758c12810a8fc53" prot="public" virt="non-virtual"><scope>boost::geometry::svg_mapper</scope><name>svg_mapper</name></member>
      <member refid="classboost_1_1geometry_1_1svg__mapper_1a20890c91dcb47bef38356d81b8abcef9" prot="public" virt="non-virtual"><scope>boost::geometry::svg_mapper</scope><name>text</name></member>
      <member refid="classboost_1_1geometry_1_1svg__mapper_1ac7d480fb03f3df63baa268c2a5c88d40" prot="private" virt="non-virtual"><scope>boost::geometry::svg_mapper</scope><name>transformer_type</name></member>
      <member refid="classboost_1_1geometry_1_1svg__mapper_1a64268b19bdbeda5f55a83af7e355a4c3" prot="public" virt="virtual"><scope>boost::geometry::svg_mapper</scope><name>~svg_mapper</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
