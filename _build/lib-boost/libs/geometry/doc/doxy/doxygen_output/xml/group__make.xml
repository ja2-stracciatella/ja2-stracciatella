<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="group__make" kind="group">
    <compoundname>make</compoundname>
    <title>make: construct geometries</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__make_1gab8c2f53b1696956874ed69114cef3a94" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Geometry</type>
          </param>
          <param>
            <type>typename Type</type>
          </param>
        </templateparamlist>
        <type>Geometry</type>
        <definition>Geometry boost::geometry::make</definition>
        <argsstring>(Type const &amp;c1, Type const &amp;c2)</argsstring>
        <name>make</name>
        <param>
          <type>Type const &amp;</type>
          <declname>c1</declname>
        </param>
        <param>
          <type>Type const &amp;</type>
          <declname>c2</declname>
        </param>
        <briefdescription>
<para>Construct a geometry. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>It does not work with array-point types, like int[2] </para></simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Geometry</parametername>
</parameternamelist>
<parameterdescription>
<para>Any type fulfilling a Geometry Concept </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Type</parametername>
</parameternamelist>
<parameterdescription>
<para>numerical type (int, double, ttmath, ...) to specify the coordinates </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c1</parametername>
</parameternamelist>
<parameterdescription>
<para>First coordinate (usually x-coordinate) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second coordinate (usually y-coordinate) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The constructed geometry, here: a 2D point</para></simplesect>
 <qbk.distinguish> 2 coordinate values</qbk.distinguish>   <qbk>
[heading Example]
[make_2d_point] [make_2d_point_output]

[heading See also]
\* [link geometry.reference.algorithms.assign.assign_values_3_2_coordinate_values assign]
</qbk>  </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/boostorg/boost/boost/geometry/algorithms/make.hpp" line="80" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/algorithms/make.hpp" bodystart="79" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="group__make_1gacab36dbf4f41c6994fb66600303dfe3b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Geometry</type>
          </param>
          <param>
            <type>typename Type</type>
          </param>
        </templateparamlist>
        <type>Geometry</type>
        <definition>Geometry boost::geometry::make</definition>
        <argsstring>(Type const &amp;c1, Type const &amp;c2, Type const &amp;c3)</argsstring>
        <name>make</name>
        <param>
          <type>Type const &amp;</type>
          <declname>c1</declname>
        </param>
        <param>
          <type>Type const &amp;</type>
          <declname>c2</declname>
        </param>
        <param>
          <type>Type const &amp;</type>
          <declname>c3</declname>
        </param>
        <briefdescription>
<para>Construct a geometry. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Geometry</parametername>
</parameternamelist>
<parameterdescription>
<para>Any type fulfilling a Geometry Concept </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Type</parametername>
</parameternamelist>
<parameterdescription>
<para>numerical type (int, double, ttmath, ...) to specify the coordinates </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c1</parametername>
</parameternamelist>
<parameterdescription>
<para>First coordinate (usually x-coordinate) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second coordinate (usually y-coordinate) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c3</parametername>
</parameternamelist>
<parameterdescription>
<para>Third coordinate (usually z-coordinate) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The constructed geometry, here: a 3D point</para></simplesect>
 <qbk.distinguish> 3 coordinate values</qbk.distinguish>   <qbk>
[heading Example]
[make_3d_point] [make_3d_point_output]

[heading See also]
\* [link geometry.reference.algorithms.assign.assign_values_4_3_coordinate_values assign]
</qbk>  </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/boostorg/boost/boost/geometry/algorithms/make.hpp" line="114" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/algorithms/make.hpp" bodystart="113" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="group__make_1gabf487e6de983091aa6003f792b1b05df" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Geometry</type>
          </param>
        </templateparamlist>
        <type>Geometry</type>
        <definition>Geometry boost::geometry::make_inverse</definition>
        <argsstring>()</argsstring>
        <name>make_inverse</name>
        <briefdescription>
<para>Construct a box with inverse infinite coordinates. </para>        </briefdescription>
        <detaileddescription>
<para>The make_inverse function initializes a 2D or 3D box with large coordinates, the min corner is very large, the max corner is very small. This is useful e.g. in combination with the expand function, to determine the bounding box of a series of geometries. <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Geometry</parametername>
</parameternamelist>
<parameterdescription>
<para>Any type fulfilling a Geometry Concept </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The constructed geometry, here: a box</para></simplesect>
 <qbk>
[heading Example]
[make_inverse] [make_inverse_output]

[heading See also]
\* [link geometry.reference.algorithms.assign.assign_inverse assign_inverse]
</qbk>  </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/boostorg/boost/boost/geometry/algorithms/make.hpp" line="165" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/algorithms/make.hpp" bodystart="164" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="group__make_1ga06bcbd65d487f8dad0ebdab1f08aefa6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Geometry</type>
          </param>
        </templateparamlist>
        <type>Geometry</type>
        <definition>Geometry boost::geometry::make_zero</definition>
        <argsstring>()</argsstring>
        <name>make_zero</name>
        <briefdescription>
<para>Construct a geometry with its coordinates initialized to zero. </para>        </briefdescription>
        <detaileddescription>
<para>The make_zero function initializes a 2D or 3D point or box with coordinates of zero <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Geometry</parametername>
</parameternamelist>
<parameterdescription>
<para>Any type fulfilling a Geometry Concept </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The constructed and zero-initialized geometry </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/boostorg/boost/boost/geometry/algorithms/make.hpp" line="186" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/algorithms/make.hpp" bodystart="185" bodyend="196"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
