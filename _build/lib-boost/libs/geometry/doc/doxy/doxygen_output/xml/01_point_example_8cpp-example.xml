<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="01_point_example_8cpp-example" kind="example">
    <compoundname>01_point_example.cpp</compoundname>
    <detaileddescription>
<para>In most cases the documentation gives small examples of how to use the algorithms or classes. The point example is a slightly larger example giving an idea of how to use different algorithms from the library, related to points. It shows<itemizedlist>
<listitem><para>the usage of include files</para></listitem><listitem><para>how to declare points, using different coordinate types</para></listitem><listitem><para>how to construct points, specifying coordinates, initializing to zero or to infinite</para></listitem><listitem><para>how to compare points to each other</para></listitem><listitem><para>how points can be streamed as OGC text</para></listitem><listitem><para>calculating the distance from point to point <programlisting><codeline><highlight class="comment">//<sp/>Boost.Geometry<sp/>(aka<sp/>GGL,<sp/>Generic<sp/>Geometry<sp/>Library)</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2007-2012<sp/>Barend<sp/>Gehrels,<sp/>Amsterdam,<sp/>the<sp/>Netherlands.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2008-2012<sp/>Bruno<sp/>Lalande,<sp/>Paris,<sp/>France.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2009-2012<sp/>Mateusz<sp/>Loskot,<sp/>London,<sp/>UK.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use,<sp/>modification<sp/>and<sp/>distribution<sp/>is<sp/>subject<sp/>to<sp/>the<sp/>Boost<sp/>Software<sp/>License,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Version<sp/>1.0.<sp/>(See<sp/>accompanying<sp/>file<sp/>LICENSE_1_0.txt<sp/>or<sp/>copy<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.boost.org/LICENSE_1_0.txt)</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Point<sp/>Example<sp/>-<sp/>showing<sp/>different<sp/>type<sp/>of<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/geometry/geometry.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="point__xy_8hpp" kindref="compound">boost/geometry/geometries/point_xy.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="boost__tuple_8hpp" kindref="compound">boost/geometry/geometries/adapted/boost_tuple.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="c__array_8hpp" kindref="compound">boost/geometry/geometries/adapted/c_array.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="boost__array_8hpp" kindref="compound">boost/geometry/geometries/adapted/boost_array.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/geometry/geometries/adapted/boost_polygon/point.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="c__array_8hpp_1a815278dd46c0e0cbb9188150ef5305a9" kindref="member">BOOST_GEOMETRY_REGISTER_C_ARRAY_CS</ref>(cs::cartesian)</highlight></codeline>
<codeline><highlight class="normal"><ref refid="boost__array_8hpp_1ac2d86fd15263a2dbdd90e8da224fd167" kindref="member">BOOST_GEOMETRY_REGISTER_BOOST_ARRAY_CS</ref>(cs::cartesian)</highlight></codeline>
<codeline><highlight class="normal"><ref refid="boost__tuple_8hpp_1ad912721c6dfdc38ab2cd6551c2436f97" kindref="member">BOOST_GEOMETRY_REGISTER_BOOST_TUPLE_CS</ref>(cs::cartesian)</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">boost::geometry;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Boost.Geometry<sp/>contains<sp/>several<sp/>point<sp/>types:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1:<sp/>its<sp/>own<sp/>generic<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classboost_1_1geometry_1_1model_1_1point" kindref="compound" tooltip="Basic point class, having coordinates defined in a neutral way.">model::point&lt;double, 2, cs::cartesian&gt;</ref><sp/>pt1;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2:<sp/>its<sp/>own<sp/>type<sp/>targetted<sp/>to<sp/>Cartesian<sp/>(x,y)<sp/>coordinates</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classboost_1_1geometry_1_1model_1_1d2_1_1point__xy" kindref="compound" tooltip="2D point in Cartesian coordinate system">model::d2::point_xy&lt;double&gt;</ref><sp/>pt2;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>3:<sp/>it<sp/>supports<sp/>Boost<sp/>tuple&apos;s</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>boost::tuple&lt;double,<sp/>double&gt;<sp/>pt3;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>4:<sp/>it<sp/>supports<sp/>normal<sp/>arrays</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pt4[2];</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>5:<sp/>it<sp/>supports<sp/>arrays-as-points<sp/>from<sp/>Boost.Array</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>boost::array&lt;double,<sp/>2&gt;<sp/>pt5;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>6:<sp/>it<sp/>supports<sp/>points<sp/>from<sp/>Boost.Polygon</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>boost::polygon::point_data&lt;double&gt;<sp/>pt6;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>7:<sp/>in<sp/>the<sp/>past<sp/>there<sp/>was<sp/>a<sp/>typedef<sp/>point_2d</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>But<sp/>users<sp/>are<sp/>now<sp/>supposted<sp/>to<sp/>do<sp/>that<sp/>themselves:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classboost_1_1geometry_1_1model_1_1d2_1_1point__xy" kindref="compound" tooltip="2D point in Cartesian coordinate system">model::d2::point_xy&lt;double&gt;</ref><sp/>point_2d;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>point_2d<sp/>pt7;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>7:<sp/>there<sp/>are<sp/>more<sp/>variants,<sp/>and<sp/>you<sp/>can<sp/>create<sp/>your<sp/>own.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>(see<sp/>therefore<sp/>the<sp/>custom_point<sp/>example)</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>All<sp/>these<sp/>types<sp/>are<sp/>handled<sp/>the<sp/>same<sp/>way.<sp/>We<sp/>show<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>assigning<sp/>them<sp/>and<sp/>calculating<sp/>distances.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__assign_1ga9ee6c10e38a19e8e52bf9a1fc5a19a05" kindref="member" tooltip="Assign two coordinates to a geometry (usually a 2D point)">assign_values</ref>(pt1,<sp/>1,<sp/>1);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__assign_1ga9ee6c10e38a19e8e52bf9a1fc5a19a05" kindref="member" tooltip="Assign two coordinates to a geometry (usually a 2D point)">assign_values</ref>(pt2,<sp/>2,<sp/>2);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__assign_1ga9ee6c10e38a19e8e52bf9a1fc5a19a05" kindref="member" tooltip="Assign two coordinates to a geometry (usually a 2D point)">assign_values</ref>(pt3,<sp/>3,<sp/>3);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__assign_1ga9ee6c10e38a19e8e52bf9a1fc5a19a05" kindref="member" tooltip="Assign two coordinates to a geometry (usually a 2D point)">assign_values</ref>(pt4,<sp/>4,<sp/>4);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__assign_1ga9ee6c10e38a19e8e52bf9a1fc5a19a05" kindref="member" tooltip="Assign two coordinates to a geometry (usually a 2D point)">assign_values</ref>(pt5,<sp/>5,<sp/>5);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__assign_1ga9ee6c10e38a19e8e52bf9a1fc5a19a05" kindref="member" tooltip="Assign two coordinates to a geometry (usually a 2D point)">assign_values</ref>(pt6,<sp/>6,<sp/>6);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__assign_1ga9ee6c10e38a19e8e52bf9a1fc5a19a05" kindref="member" tooltip="Assign two coordinates to a geometry (usually a 2D point)">assign_values</ref>(pt7,<sp/>7,<sp/>7);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d1<sp/>=<sp/><ref refid="group__distance_1ga7d68c34d1ded4428903f906244b31da4" kindref="member" tooltip="Calculate the distance of two geometries using the specified strategy.">distance</ref>(pt1,<sp/>pt2);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d2<sp/>=<sp/><ref refid="group__distance_1ga7d68c34d1ded4428903f906244b31da4" kindref="member" tooltip="Calculate the distance of two geometries using the specified strategy.">distance</ref>(pt3,<sp/>pt4);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d3<sp/>=<sp/><ref refid="group__distance_1ga7d68c34d1ded4428903f906244b31da4" kindref="member" tooltip="Calculate the distance of two geometries using the specified strategy.">distance</ref>(pt5,<sp/>pt6);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Distances:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>d1<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>and<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>d2<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>and<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>d3<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(in<sp/>case<sp/>you<sp/>didn&apos;t<sp/>note,<sp/>distances<sp/>can<sp/>be<sp/>calculated</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>from<sp/>points<sp/>with<sp/>different<sp/>point-types)</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Several<sp/>ways<sp/>of<sp/>construction<sp/>and<sp/>setting<sp/>point<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1:<sp/>default,<sp/>empty<sp/>constructor,<sp/>causing<sp/>no<sp/>initialization<sp/>at<sp/>all</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classboost_1_1geometry_1_1model_1_1d2_1_1point__xy" kindref="compound" tooltip="2D point in Cartesian coordinate system">model::d2::point_xy&lt;double&gt;</ref><sp/>p1;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2:<sp/>as<sp/>shown<sp/>above,<sp/>assign_values</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classboost_1_1geometry_1_1model_1_1d2_1_1point__xy" kindref="compound" tooltip="2D point in Cartesian coordinate system">model::d2::point_xy&lt;double&gt;</ref><sp/>p2;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__assign_1ga9ee6c10e38a19e8e52bf9a1fc5a19a05" kindref="member" tooltip="Assign two coordinates to a geometry (usually a 2D point)">assign_values</ref>(p2,<sp/>1,<sp/>1);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>3:<sp/>using<sp/>&quot;set&quot;<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>set<sp/>uses<sp/>the<sp/>concepts<sp/>behind,<sp/>such<sp/>that<sp/>it<sp/>can<sp/>be<sp/>applied<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>every<sp/>point-type<sp/>(like<sp/>assign_values)</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classboost_1_1geometry_1_1model_1_1d2_1_1point__xy" kindref="compound" tooltip="2D point in Cartesian coordinate system">model::d2::point_xy&lt;double&gt;</ref><sp/>p3;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;0&gt;(p3,<sp/>1);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;1&gt;(p3,<sp/>1);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set&lt;2&gt;(p3,<sp/>1);<sp/>//will<sp/>result<sp/>in<sp/>compile-error</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>3:<sp/>for<sp/>any<sp/>point<sp/>type,<sp/>and<sp/>other<sp/>geometry<sp/>objects:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>there<sp/>is<sp/>the<sp/>&quot;make&quot;<sp/>object<sp/>generator</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>(this<sp/>one<sp/>requires<sp/>to<sp/>specify<sp/>the<sp/>point-type).</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classboost_1_1geometry_1_1model_1_1d2_1_1point__xy" kindref="compound" tooltip="2D point in Cartesian coordinate system">model::d2::point_xy&lt;double&gt;</ref><sp/>p4<sp/>=<sp/>make&lt;model::d2::point_xy&lt;double&gt;<sp/>&gt;(1,1);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>5:<sp/>for<sp/>the<sp/>d2::point_xy&lt;...&gt;<sp/>type<sp/>only:<sp/>constructor<sp/>with<sp/>two<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classboost_1_1geometry_1_1model_1_1d2_1_1point__xy" kindref="compound" tooltip="2D point in Cartesian coordinate system">model::d2::point_xy&lt;double&gt;</ref><sp/>p5(1,1);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>6:<sp/>for<sp/>boost<sp/>tuples<sp/>you<sp/>can<sp/>of<sp/>course<sp/>use<sp/>make_tuple</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Some<sp/>ways<sp/>of<sp/>getting<sp/>point<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1:<sp/>using<sp/>the<sp/>&quot;get&quot;<sp/>function<sp/>following<sp/>the<sp/>concepts<sp/>behind</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>get&lt;0&gt;(p2)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>get&lt;1&gt;(p2)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2:<sp/>for<sp/>point_xy<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>p2.x()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>p2.y()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>3:<sp/>using<sp/>boost-tuples<sp/>you<sp/>of<sp/>course<sp/>can<sp/>boost-tuple-methods</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>pt3.get&lt;0&gt;()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pt3.get&lt;1&gt;()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>4:<sp/>Boost.Geometry<sp/>supports<sp/>various<sp/>output<sp/>formats,<sp/>e.g.<sp/>DSV</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>(delimiter<sp/>separated<sp/>values)</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>dsv(pt3)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>5.<sp/>or<sp/>wkt</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/><ref refid="group__wkt_1ga32f68b63c9c15ed3c31f386001c4ec29" kindref="member" tooltip="Main WKT-streaming function.">wkt</ref>(p4)<sp/>&lt;&lt;<sp/>(<ref refid="group__equals_1gaf75334fd455c4d01a57a2f2d590d068c" kindref="member" tooltip="Checks if a geometry \1.">equals</ref>(p4,<sp/>p5)<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;<sp/>equals<sp/>&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;<sp/>don&apos;t<sp/>equals<sp/>&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/><ref refid="group__wkt_1ga32f68b63c9c15ed3c31f386001c4ec29" kindref="member" tooltip="Main WKT-streaming function.">wkt</ref>(p5)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>There<sp/>are<sp/>3-dimensional<sp/>points<sp/>too</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classboost_1_1geometry_1_1model_1_1point" kindref="compound" tooltip="Basic point class, having coordinates defined in a neutral way.">model::point&lt;double, 3, cs::cartesian&gt;</ref><sp/>d3a,<sp/>d3b;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__assign_1ga9ee6c10e38a19e8e52bf9a1fc5a19a05" kindref="member" tooltip="Assign two coordinates to a geometry (usually a 2D point)">assign_values</ref>(d3a,<sp/>1,<sp/>2,<sp/>3);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__assign_1ga9ee6c10e38a19e8e52bf9a1fc5a19a05" kindref="member" tooltip="Assign two coordinates to a geometry (usually a 2D point)">assign_values</ref>(d3b,<sp/>4,<sp/>5,<sp/>6);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>d3<sp/>=<sp/><ref refid="group__distance_1ga7d68c34d1ded4428903f906244b31da4" kindref="member" tooltip="Calculate the distance of two geometries using the specified strategy.">distance</ref>(d3a,<sp/>d3b);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Other<sp/>examples<sp/>show<sp/>other<sp/>types<sp/>of<sp/>points,<sp/>geometries<sp/>and<sp/>more<sp/>algorithms</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para></listitem></itemizedlist>
</para>    </detaileddescription>
  </compounddef>
</doxygen>
