<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="classboost_1_1geometry_1_1detail_1_1partition_1_1partition__one__range" kind="class" prot="public">
    <compoundname>boost::geometry::detail::partition::partition_one_range</compoundname>
    <includes local="no">partition.hpp</includes>
    <templateparamlist>
      <param>
        <type>int</type>
        <declname>Dimension</declname>
        <defname>Dimension</defname>
      </param>
      <param>
        <type>typename Box</type>
      </param>
      <param>
        <type>typename OverlapsPolicy</type>
      </param>
      <param>
        <type>typename ExpandPolicy</type>
      </param>
      <param>
        <type>typename VisitBoxPolicy</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classboost_1_1geometry_1_1detail_1_1partition_1_1partition__one__range_1a591ab4605d0ad647e236d41aa43552f2" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename IteratorVector</type>
          </param>
        </templateparamlist>
        <type>Box</type>
        <definition>static Box boost::geometry::detail::partition::partition_one_range&lt; Dimension, Box, OverlapsPolicy, ExpandPolicy, VisitBoxPolicy &gt;::get_new_box</definition>
        <argsstring>(IteratorVector const &amp;input)</argsstring>
        <name>get_new_box</name>
        <param>
          <type>IteratorVector const &amp;</type>
          <declname>input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/boostorg/boost/boost/geometry/algorithms/detail/partition.hpp" line="222" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/algorithms/detail/partition.hpp" bodystart="221" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="classboost_1_1geometry_1_1detail_1_1partition_1_1partition__one__range_1a1be5796e3e8d7b1739c114cf59456e91" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Policy</type>
          </param>
          <param>
            <type>typename IteratorVector</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void boost::geometry::detail::partition::partition_one_range&lt; Dimension, Box, OverlapsPolicy, ExpandPolicy, VisitBoxPolicy &gt;::next_level</definition>
        <argsstring>(Box const &amp;box, IteratorVector const &amp;input, std::size_t level, std::size_t min_elements, Policy &amp;policy, VisitBoxPolicy &amp;box_policy)</argsstring>
        <name>next_level</name>
        <param>
          <type>Box const &amp;</type>
          <declname>box</declname>
        </param>
        <param>
          <type>IteratorVector const &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>level</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>min_elements</declname>
        </param>
        <param>
          <type>Policy &amp;</type>
          <declname>policy</declname>
        </param>
        <param>
          <type>VisitBoxPolicy &amp;</type>
          <declname>box_policy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/boostorg/boost/boost/geometry/algorithms/detail/partition.hpp" line="234" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/algorithms/detail/partition.hpp" bodystart="230" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="classboost_1_1geometry_1_1detail_1_1partition_1_1partition__one__range_1a6f7ae07cf13994670546b1987d444dce" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Policy</type>
          </param>
          <param>
            <type>typename IteratorVector</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void boost::geometry::detail::partition::partition_one_range&lt; Dimension, Box, OverlapsPolicy, ExpandPolicy, VisitBoxPolicy &gt;::next_level2</definition>
        <argsstring>(Box const &amp;box, IteratorVector const &amp;input1, IteratorVector const &amp;input2, std::size_t level, std::size_t min_elements, Policy &amp;policy, VisitBoxPolicy &amp;box_policy)</argsstring>
        <name>next_level2</name>
        <param>
          <type>Box const &amp;</type>
          <declname>box</declname>
        </param>
        <param>
          <type>IteratorVector const &amp;</type>
          <declname>input1</declname>
        </param>
        <param>
          <type>IteratorVector const &amp;</type>
          <declname>input2</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>level</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>min_elements</declname>
        </param>
        <param>
          <type>Policy &amp;</type>
          <declname>policy</declname>
        </param>
        <param>
          <type>VisitBoxPolicy &amp;</type>
          <declname>box_policy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/boostorg/boost/boost/geometry/algorithms/detail/partition.hpp" line="260" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/algorithms/detail/partition.hpp" bodystart="255" bodyend="277"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classboost_1_1geometry_1_1detail_1_1partition_1_1partition__one__range_1a08fa4c668f3feb1b798cc38b910267e5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Policy</type>
          </param>
          <param>
            <type>typename IteratorVector</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void boost::geometry::detail::partition::partition_one_range&lt; Dimension, Box, OverlapsPolicy, ExpandPolicy, VisitBoxPolicy &gt;::apply</definition>
        <argsstring>(Box const &amp;box, IteratorVector const &amp;input, std::size_t level, std::size_t min_elements, Policy &amp;policy, VisitBoxPolicy &amp;box_policy)</argsstring>
        <name>apply</name>
        <param>
          <type>Box const &amp;</type>
          <declname>box</declname>
        </param>
        <param>
          <type>IteratorVector const &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>level</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>min_elements</declname>
        </param>
        <param>
          <type>Policy &amp;</type>
          <declname>policy</declname>
        </param>
        <param>
          <type>VisitBoxPolicy &amp;</type>
          <declname>box_policy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/boostorg/boost/boost/geometry/algorithms/detail/partition.hpp" line="286" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/algorithms/detail/partition.hpp" bodystart="281" bodyend="317"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/travis/build/boostorg/boost/boost/geometry/algorithms/detail/partition.hpp" line="219" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/algorithms/detail/partition.hpp" bodystart="218" bodyend="318"/>
    <listofallmembers>
      <member refid="classboost_1_1geometry_1_1detail_1_1partition_1_1partition__one__range_1a08fa4c668f3feb1b798cc38b910267e5" prot="public" virt="non-virtual"><scope>boost::geometry::detail::partition::partition_one_range</scope><name>apply</name></member>
      <member refid="classboost_1_1geometry_1_1detail_1_1partition_1_1partition__one__range_1a591ab4605d0ad647e236d41aa43552f2" prot="private" virt="non-virtual"><scope>boost::geometry::detail::partition::partition_one_range</scope><name>get_new_box</name></member>
      <member refid="classboost_1_1geometry_1_1detail_1_1partition_1_1partition__one__range_1a1be5796e3e8d7b1739c114cf59456e91" prot="private" virt="non-virtual"><scope>boost::geometry::detail::partition::partition_one_range</scope><name>next_level</name></member>
      <member refid="classboost_1_1geometry_1_1detail_1_1partition_1_1partition__one__range_1a6f7ae07cf13994670546b1987d444dce" prot="private" virt="non-virtual"><scope>boost::geometry::detail::partition::partition_one_range</scope><name>next_level2</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
