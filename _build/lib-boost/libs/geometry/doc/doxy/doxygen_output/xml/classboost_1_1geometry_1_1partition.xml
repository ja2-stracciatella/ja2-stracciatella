<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="classboost_1_1geometry_1_1partition" kind="class" prot="public">
    <compoundname>boost::geometry::partition</compoundname>
    <includes local="no">partition.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename Box</type>
      </param>
      <param>
        <type>typename ExpandPolicy1</type>
      </param>
      <param>
        <type>typename OverlapsPolicy1</type>
      </param>
      <param>
        <type>typename ExpandPolicy2</type>
        <defval>ExpandPolicy1</defval>
      </param>
      <param>
        <type>typename OverlapsPolicy2</type>
        <defval>OverlapsPolicy1</defval>
      </param>
      <param>
        <type>typename IncludePolicy1</type>
        <defval><ref refid="structboost_1_1geometry_1_1detail_1_1partition_1_1include__all__policy" kindref="compound">detail::partition::include_all_policy</ref></defval>
      </param>
      <param>
        <type>typename IncludePolicy2</type>
        <defval><ref refid="structboost_1_1geometry_1_1detail_1_1partition_1_1include__all__policy" kindref="compound">detail::partition::include_all_policy</ref></defval>
      </param>
      <param>
        <type>typename VisitBoxPolicy</type>
        <defval><ref refid="structboost_1_1geometry_1_1detail_1_1partition_1_1visit__no__policy" kindref="compound">detail::partition::visit_no_policy</ref></defval>
      </param>
    </templateparamlist>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classboost_1_1geometry_1_1partition_1a98262bf26250e4683bb8218d87a83897" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ExpandPolicy</type>
          </param>
          <param>
            <type>typename IncludePolicy</type>
          </param>
          <param>
            <type>typename ForwardRange</type>
          </param>
          <param>
            <type>typename IteratorVector</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void boost::geometry::partition&lt; Box, ExpandPolicy1, OverlapsPolicy1, ExpandPolicy2, OverlapsPolicy2, IncludePolicy1, IncludePolicy2, VisitBoxPolicy &gt;::expand_to_range</definition>
        <argsstring>(ForwardRange const &amp;forward_range, Box &amp;total, IteratorVector &amp;iterator_vector)</argsstring>
        <name>expand_to_range</name>
        <param>
          <type>ForwardRange const &amp;</type>
          <declname>forward_range</declname>
        </param>
        <param>
          <type>Box &amp;</type>
          <declname>total</declname>
        </param>
        <param>
          <type>IteratorVector &amp;</type>
          <declname>iterator_vector</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/boostorg/boost/boost/geometry/algorithms/detail/partition.hpp" line="515" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/algorithms/detail/partition.hpp" bodystart="513" bodyend="527"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classboost_1_1geometry_1_1partition_1ae283037706a8a86c270774dc2a695294" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ForwardRange</type>
          </param>
          <param>
            <type>typename VisitPolicy</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void boost::geometry::partition&lt; Box, ExpandPolicy1, OverlapsPolicy1, ExpandPolicy2, OverlapsPolicy2, IncludePolicy1, IncludePolicy2, VisitBoxPolicy &gt;::apply</definition>
        <argsstring>(ForwardRange const &amp;forward_range, VisitPolicy &amp;visitor, std::size_t min_elements=16, VisitBoxPolicy box_visitor=detail::partition::visit_no_policy())</argsstring>
        <name>apply</name>
        <param>
          <type>ForwardRange const &amp;</type>
          <declname>forward_range</declname>
        </param>
        <param>
          <type>VisitPolicy &amp;</type>
          <declname>visitor</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>min_elements</declname>
          <defval>16</defval>
        </param>
        <param>
          <type>VisitBoxPolicy</type>
          <declname>box_visitor</declname>
          <defval><ref refid="structboost_1_1geometry_1_1detail_1_1partition_1_1visit__no__policy" kindref="compound">detail::partition::visit_no_policy</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/boostorg/boost/boost/geometry/algorithms/detail/partition.hpp" line="536" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/algorithms/detail/partition.hpp" bodystart="531" bodyend="572"/>
      </memberdef>
      <memberdef kind="function" id="classboost_1_1geometry_1_1partition_1adfaabe8f058bcf4c14bb61367ab524c2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ForwardRange1</type>
          </param>
          <param>
            <type>typename ForwardRange2</type>
          </param>
          <param>
            <type>typename VisitPolicy</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void boost::geometry::partition&lt; Box, ExpandPolicy1, OverlapsPolicy1, ExpandPolicy2, OverlapsPolicy2, IncludePolicy1, IncludePolicy2, VisitBoxPolicy &gt;::apply</definition>
        <argsstring>(ForwardRange1 const &amp;forward_range1, ForwardRange2 const &amp;forward_range2, VisitPolicy &amp;visitor, std::size_t min_elements=16, VisitBoxPolicy box_visitor=detail::partition::visit_no_policy())</argsstring>
        <name>apply</name>
        <param>
          <type>ForwardRange1 const &amp;</type>
          <declname>forward_range1</declname>
        </param>
        <param>
          <type>ForwardRange2 const &amp;</type>
          <declname>forward_range2</declname>
        </param>
        <param>
          <type>VisitPolicy &amp;</type>
          <declname>visitor</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>min_elements</declname>
          <defval>16</defval>
        </param>
        <param>
          <type>VisitBoxPolicy</type>
          <declname>box_visitor</declname>
          <defval><ref refid="structboost_1_1geometry_1_1detail_1_1partition_1_1visit__no__policy" kindref="compound">detail::partition::visit_no_policy</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/boostorg/boost/boost/geometry/algorithms/detail/partition.hpp" line="587" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/algorithms/detail/partition.hpp" bodystart="580" bodyend="631"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/travis/build/boostorg/boost/boost/geometry/algorithms/detail/partition.hpp" line="505" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/algorithms/detail/partition.hpp" bodystart="504" bodyend="632"/>
    <listofallmembers>
      <member refid="classboost_1_1geometry_1_1partition_1ae283037706a8a86c270774dc2a695294" prot="public" virt="non-virtual"><scope>boost::geometry::partition</scope><name>apply</name></member>
      <member refid="classboost_1_1geometry_1_1partition_1adfaabe8f058bcf4c14bb61367ab524c2" prot="public" virt="non-virtual"><scope>boost::geometry::partition</scope><name>apply</name></member>
      <member refid="classboost_1_1geometry_1_1partition_1a98262bf26250e4683bb8218d87a83897" prot="private" virt="non-virtual"><scope>boost::geometry::partition</scope><name>expand_to_range</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
