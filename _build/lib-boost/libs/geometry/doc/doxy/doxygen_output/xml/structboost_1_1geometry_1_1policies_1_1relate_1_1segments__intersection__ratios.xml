<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="structboost_1_1geometry_1_1policies_1_1relate_1_1segments__intersection__ratios" kind="struct" prot="public">
    <compoundname>boost::geometry::policies::relate::segments_intersection_ratios</compoundname>
    <includes local="no">intersection_ratios.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename FractionType</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structboost_1_1geometry_1_1policies_1_1relate_1_1segments__intersection__ratios_1aada2fd86e379c7a17cf56c229705effb" prot="public" static="no">
        <type>FractionType</type>
        <definition>typedef FractionType boost::geometry::policies::relate::segments_intersection_ratios&lt; FractionType &gt;::return_type</definition>
        <argsstring></argsstring>
        <name>return_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/boostorg/boost/boost/geometry/policies/relate/intersection_ratios.hpp" line="41" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/policies/relate/intersection_ratios.hpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structboost_1_1geometry_1_1policies_1_1relate_1_1segments__intersection__ratios_1a1c3cec4779370c5964b0e6e39e69ee73" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Segment</type>
          </param>
        </templateparamlist>
        <type><ref refid="structboost_1_1geometry_1_1policies_1_1relate_1_1segments__intersection__ratios_1aada2fd86e379c7a17cf56c229705effb" kindref="member">return_type</ref></type>
        <definition>static return_type boost::geometry::policies::relate::segments_intersection_ratios&lt; FractionType &gt;::degenerate</definition>
        <argsstring>(Segment const &amp;segment, bool)</argsstring>
        <name>degenerate</name>
        <param>
          <type>Segment const &amp;</type>
          <declname>segment</declname>
        </param>
        <param>
          <type>bool</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/boostorg/boost/boost/geometry/policies/relate/intersection_ratios.hpp" line="99" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/policies/relate/intersection_ratios.hpp" bodystart="98" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1geometry_1_1policies_1_1relate_1_1segments__intersection__ratios_1abda731e012dd3b6e2e89b828f93930c2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structboost_1_1geometry_1_1policies_1_1relate_1_1segments__intersection__ratios_1aada2fd86e379c7a17cf56c229705effb" kindref="member">return_type</ref></type>
        <definition>static return_type boost::geometry::policies::relate::segments_intersection_ratios&lt; FractionType &gt;::disjoint</definition>
        <argsstring>()</argsstring>
        <name>disjoint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/boostorg/boost/boost/geometry/policies/relate/intersection_ratios.hpp" line="89" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/policies/relate/intersection_ratios.hpp" bodystart="88" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1geometry_1_1policies_1_1relate_1_1segments__intersection__ratios_1abcc0066d5a6b0d20c25bb6eb853ca200" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structboost_1_1geometry_1_1policies_1_1relate_1_1segments__intersection__ratios_1aada2fd86e379c7a17cf56c229705effb" kindref="member">return_type</ref></type>
        <definition>static return_type boost::geometry::policies::relate::segments_intersection_ratios&lt; FractionType &gt;::error</definition>
        <argsstring>(std::string const &amp;)</argsstring>
        <name>error</name>
        <param>
          <type>std::string const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/boostorg/boost/boost/geometry/policies/relate/intersection_ratios.hpp" line="93" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/policies/relate/intersection_ratios.hpp" bodystart="92" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1geometry_1_1policies_1_1relate_1_1segments__intersection__ratios_1ae7bbfffa0cb3f996e8f554a6aef5bb25" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Segment</type>
          </param>
          <param>
            <type>typename Ratio</type>
          </param>
        </templateparamlist>
        <type><ref refid="structboost_1_1geometry_1_1policies_1_1relate_1_1segments__intersection__ratios_1aada2fd86e379c7a17cf56c229705effb" kindref="member">return_type</ref></type>
        <definition>static return_type boost::geometry::policies::relate::segments_intersection_ratios&lt; FractionType &gt;::one_degenerate</definition>
        <argsstring>(Segment const &amp;, Ratio const &amp;ratio, bool a_degenerate)</argsstring>
        <name>one_degenerate</name>
        <param>
          <type>Segment const &amp;</type>
        </param>
        <param>
          <type>Ratio const &amp;</type>
          <declname>ratio</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>a_degenerate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/boostorg/boost/boost/geometry/policies/relate/intersection_ratios.hpp" line="106" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/policies/relate/intersection_ratios.hpp" bodystart="104" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1geometry_1_1policies_1_1relate_1_1segments__intersection__ratios_1afa55cf8dec6e24570b7fb87ebeb0e927" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Segment1</type>
          </param>
          <param>
            <type>typename Segment2</type>
          </param>
          <param>
            <type>typename Ratio</type>
          </param>
        </templateparamlist>
        <type><ref refid="structboost_1_1geometry_1_1policies_1_1relate_1_1segments__intersection__ratios_1aada2fd86e379c7a17cf56c229705effb" kindref="member">return_type</ref></type>
        <definition>static return_type boost::geometry::policies::relate::segments_intersection_ratios&lt; FractionType &gt;::segments_collinear</definition>
        <argsstring>(Segment1 const &amp;, Segment2 const &amp;, Ratio const &amp;ra_from_wrt_b, Ratio const &amp;ra_to_wrt_b, Ratio const &amp;rb_from_wrt_a, Ratio const &amp;rb_to_wrt_a)</argsstring>
        <name>segments_collinear</name>
        <param>
          <type>Segment1 const &amp;</type>
        </param>
        <param>
          <type>Segment2 const &amp;</type>
        </param>
        <param>
          <type>Ratio const &amp;</type>
          <declname>ra_from_wrt_b</declname>
        </param>
        <param>
          <type>Ratio const &amp;</type>
          <declname>ra_to_wrt_b</declname>
        </param>
        <param>
          <type>Ratio const &amp;</type>
          <declname>rb_from_wrt_a</declname>
        </param>
        <param>
          <type>Ratio const &amp;</type>
          <declname>rb_to_wrt_a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/boostorg/boost/boost/geometry/policies/relate/intersection_ratios.hpp" line="63" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/policies/relate/intersection_ratios.hpp" bodystart="59" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1geometry_1_1policies_1_1relate_1_1segments__intersection__ratios_1ae2ad45064320d9282931760fb105e2d2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Segment1</type>
          </param>
          <param>
            <type>typename Segment2</type>
          </param>
          <param>
            <type>typename SegmentIntersectionInfo</type>
          </param>
        </templateparamlist>
        <type><ref refid="structboost_1_1geometry_1_1policies_1_1relate_1_1segments__intersection__ratios_1aada2fd86e379c7a17cf56c229705effb" kindref="member">return_type</ref></type>
        <definition>static return_type boost::geometry::policies::relate::segments_intersection_ratios&lt; FractionType &gt;::segments_crosses</definition>
        <argsstring>(side_info const &amp;, SegmentIntersectionInfo const &amp;sinfo, Segment1 const &amp;, Segment2 const &amp;)</argsstring>
        <name>segments_crosses</name>
        <param>
          <type><ref refid="classboost_1_1geometry_1_1side__info" kindref="compound">side_info</ref> const &amp;</type>
        </param>
        <param>
          <type>SegmentIntersectionInfo const &amp;</type>
          <declname>sinfo</declname>
        </param>
        <param>
          <type>Segment1 const &amp;</type>
        </param>
        <param>
          <type>Segment2 const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/boostorg/boost/boost/geometry/policies/relate/intersection_ratios.hpp" line="52" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/policies/relate/intersection_ratios.hpp" bodystart="49" bodyend="56"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Policy returning segment ratios. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="note"><para>Template argument FractionType should be a fraction_type&lt;SegmentRatio&gt; </para></simplesect>
</para>    </detaileddescription>
    <location file="/home/travis/build/boostorg/boost/boost/geometry/policies/relate/intersection_ratios.hpp" line="40" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/policies/relate/intersection_ratios.hpp" bodystart="39" bodyend="120"/>
    <listofallmembers>
      <member refid="structboost_1_1geometry_1_1policies_1_1relate_1_1segments__intersection__ratios_1a1c3cec4779370c5964b0e6e39e69ee73" prot="public" virt="non-virtual"><scope>boost::geometry::policies::relate::segments_intersection_ratios</scope><name>degenerate</name></member>
      <member refid="structboost_1_1geometry_1_1policies_1_1relate_1_1segments__intersection__ratios_1abda731e012dd3b6e2e89b828f93930c2" prot="public" virt="non-virtual"><scope>boost::geometry::policies::relate::segments_intersection_ratios</scope><name>disjoint</name></member>
      <member refid="structboost_1_1geometry_1_1policies_1_1relate_1_1segments__intersection__ratios_1abcc0066d5a6b0d20c25bb6eb853ca200" prot="public" virt="non-virtual"><scope>boost::geometry::policies::relate::segments_intersection_ratios</scope><name>error</name></member>
      <member refid="structboost_1_1geometry_1_1policies_1_1relate_1_1segments__intersection__ratios_1ae7bbfffa0cb3f996e8f554a6aef5bb25" prot="public" virt="non-virtual"><scope>boost::geometry::policies::relate::segments_intersection_ratios</scope><name>one_degenerate</name></member>
      <member refid="structboost_1_1geometry_1_1policies_1_1relate_1_1segments__intersection__ratios_1aada2fd86e379c7a17cf56c229705effb" prot="public" virt="non-virtual"><scope>boost::geometry::policies::relate::segments_intersection_ratios</scope><name>return_type</name></member>
      <member refid="structboost_1_1geometry_1_1policies_1_1relate_1_1segments__intersection__ratios_1afa55cf8dec6e24570b7fb87ebeb0e927" prot="public" virt="non-virtual"><scope>boost::geometry::policies::relate::segments_intersection_ratios</scope><name>segments_collinear</name></member>
      <member refid="structboost_1_1geometry_1_1policies_1_1relate_1_1segments__intersection__ratios_1ae2ad45064320d9282931760fb105e2d2" prot="public" virt="non-virtual"><scope>boost::geometry::policies::relate::segments_intersection_ratios</scope><name>segments_crosses</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
