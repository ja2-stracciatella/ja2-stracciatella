<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="structboost_1_1geometry_1_1add__const__if__c" kind="struct" prot="public">
    <compoundname>boost::geometry::add_const_if_c</compoundname>
    <includes local="no">add_const_if_c.hpp</includes>
    <templateparamlist>
      <param>
        <type>bool</type>
        <declname>IsConst</declname>
        <defname>IsConst</defname>
      </param>
      <param>
        <type>typename Type</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structboost_1_1geometry_1_1add__const__if__c_1a7adfc69ab7628a0884a19166a3c681a9" prot="public" static="no">
        <type>boost::mpl::if_c&lt; IsConst, Type const, Type &gt;::<ref refid="structboost_1_1geometry_1_1add__const__if__c_1a7adfc69ab7628a0884a19166a3c681a9" kindref="member">type</ref></type>
        <definition>typedef boost::mpl::if_c&lt; IsConst, Type const, Type &gt;::type boost::geometry::add_const_if_c&lt; IsConst, Type &gt;::type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/boostorg/boost/boost/geometry/util/add_const_if_c.hpp" line="48" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/util/add_const_if_c.hpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Meta-function to define a const or non const type. </para>    </briefdescription>
    <detaileddescription>
<para>If the boolean template parameter is true, the type parameter will be defined as const, otherwise it will be defined as it was. This meta-function is used to have one implementation for both const and non const references <simplesect kind="note"><para>This traits class is completely independant from Boost.Geometry and might be a separate addition to Boost </para><simplesectsep/><para>Used in a.o. for_each, interior_rings, exterior_ring </para></simplesect>
<simplesect kind="par"><title>Example</title><para><programlisting><codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>foo(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>add_const_if_c&lt;IsConst,<sp/>Point&gt;::type&amp;<sp/>point)</highlight></codeline>
</programlisting> </para></simplesect>
</para>    </detaileddescription>
    <location file="/home/travis/build/boostorg/boost/boost/geometry/util/add_const_if_c.hpp" line="42" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/util/add_const_if_c.hpp" bodystart="41" bodyend="49"/>
    <listofallmembers>
      <member refid="structboost_1_1geometry_1_1add__const__if__c_1a7adfc69ab7628a0884a19166a3c681a9" prot="public" virt="non-virtual"><scope>boost::geometry::add_const_if_c</scope><name>type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
