<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="geometries_2register_2box_8hpp" kind="file">
    <compoundname>box.hpp</compoundname>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__register_1gae42c838a1a14a9c026814524e7a05138" prot="public" static="no">
        <name>BOOST_GEOMETRY_REGISTER_BOX</name>
        <param><defname>Box</defname></param>
        <param><defname>Point</defname></param>
        <param><defname>MinCorner</defname></param>
        <param><defname>MaxCorner</defname></param>
        <initializer>namespace boost { namespace geometry { namespace traits {  \
    BOOST_GEOMETRY_DETAIL_SPECIALIZE_BOX_TRAITS(Box, Point) \
    BOOST_GEOMETRY_DETAIL_SPECIALIZE_BOX_ACCESS(Box, Point, MinCorner, MaxCorner) \
}}}</initializer>
        <briefdescription>
<para>Macro to register a \1. </para>        </briefdescription>
        <detaileddescription>
<para>The macro BOOST_GEOMETRY_REGISTER_BOX registers a box such that it is recognized by Boost.Geometry and that Boost.Geometry functionality can used with the specified type. The box may contain template parameters, which must be specified then. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Box</parametername>
</parameternamelist>
<parameterdescription>
<para>Box type to be registered </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Point</parametername>
</parameternamelist>
<parameterdescription>
<para>Point type on which box is based. Might be two or three-dimensional </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>MinCorner</parametername>
</parameternamelist>
<parameterdescription>
<para>minimum corner (should be public member or method) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>MaxCorner</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum corner (should be public member or method)</para></parameterdescription>
</parameteritem>
</parameterlist>
 <qbk>
[heading Example]
[register_box]
[register_box_output]
</qbk>  </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/boostorg/boost/boost/geometry/geometries/register/box.hpp" line="125" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/geometries/register/box.hpp" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__register_1ga09c073aef353112e056b096d9630a890" prot="public" static="no">
        <name>BOOST_GEOMETRY_REGISTER_BOX_2D_4VALUES</name>
        <param><defname>Box</defname></param>
        <param><defname>Point</defname></param>
        <param><defname>Left</defname></param>
        <param><defname>Bottom</defname></param>
        <param><defname>Right</defname></param>
        <param><defname>Top</defname></param>
        <initializer>namespace boost { namespace geometry { namespace traits {  \
    BOOST_GEOMETRY_DETAIL_SPECIALIZE_BOX_TRAITS(Box, Point) \
    BOOST_GEOMETRY_DETAIL_SPECIALIZE_BOX_ACCESS_4VALUES(Box, Point, Left, Bottom, Right, Top) \
}}}</initializer>
        <briefdescription>
<para>Macro to register a \1. </para>        </briefdescription>
        <detaileddescription>
<para>The macro BOOST_GEOMETRY_REGISTER_BOX_2D_4VALUES registers a box such that it is recognized by Boost.Geometry and that Boost.Geometry functionality can used with the specified type. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Box</parametername>
</parameternamelist>
<parameterdescription>
<para>Box type to be registered </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Point</parametername>
</parameternamelist>
<parameterdescription>
<para>Point type reported as point_type by box. Must be two dimensional. Note that these box tyeps do not contain points, but they must have a related point_type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Left</parametername>
</parameternamelist>
<parameterdescription>
<para>Left side (must be public member or method) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Bottom</parametername>
</parameternamelist>
<parameterdescription>
<para>Bottom side (must be public member or method) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Right</parametername>
</parameternamelist>
<parameterdescription>
<para>Right side (must be public member or method) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Top</parametername>
</parameternamelist>
<parameterdescription>
<para>Top side (must be public member or method)</para></parameterdescription>
</parameteritem>
</parameterlist>
 <qbk>
[heading Example]
[register_box_2d_4values]
[register_box_2d_4values_output]
</qbk>  </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/boostorg/boost/boost/geometry/geometries/register/box.hpp" line="172" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/geometries/register/box.hpp" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__register_1gab504e31e32ba0ca3a2b9fe323716acbe" prot="public" static="no">
        <name>BOOST_GEOMETRY_REGISTER_BOX_TEMPLATED</name>
        <param><defname>Box</defname></param>
        <param><defname>MinCorner</defname></param>
        <param><defname>MaxCorner</defname></param>
        <initializer>namespace boost { namespace geometry { namespace traits {  \
    BOOST_GEOMETRY_DETAIL_SPECIALIZE_BOX_TRAITS_TEMPLATED(Box) \
    BOOST_GEOMETRY_DETAIL_SPECIALIZE_BOX_ACCESS_TEMPLATED(Box, MinCorner, MaxCorner) \
}}}</initializer>
        <briefdescription>
<para>Macro to register a \1. </para>        </briefdescription>
        <detaileddescription>
<para>The macro BOOST_GEOMETRY_REGISTER_BOX_TEMPLATED registers a box such that it is recognized by Boost.Geometry and that Boost.Geometry functionality can used with the specified type. The type must have one template parameter, which should be a point type, and should not be specified. Boost.Geometry takes care of inserting the template parameter. Hence all types of this templated box are registered, regardless of their point type. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Box</parametername>
</parameternamelist>
<parameterdescription>
<para>Box type to be registered </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>MinCorner</parametername>
</parameternamelist>
<parameterdescription>
<para>minimum corner (should be public member or method) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>MaxCorner</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum corner (should be public member or method)</para></parameterdescription>
</parameteritem>
</parameterlist>
 <qbk>
[heading Example]
[register_box_templated]
[register_box_templated_output]
</qbk>  </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/boostorg/boost/boost/geometry/geometries/register/box.hpp" line="147" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/geometries/register/box.hpp" bodystart="143" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/travis/build/boostorg/boost/boost/geometry/geometries/register/box.hpp"/>
  </compounddef>
</doxygen>
