<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="structboost_1_1geometry_1_1detail_1_1turns_1_1less__seg__fraction__other__op" kind="struct" prot="public">
    <compoundname>boost::geometry::detail::turns::less_seg_fraction_other_op</compoundname>
    <includes local="no">compare_turns.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename IdLess</type>
        <defval>std::less&lt;<ref refid="namespaceboost_1_1geometry_1af0c576f82145cf6a02dcbf48b675a0c2" kindref="member">signed_size_type</ref>&gt;</defval>
      </param>
      <param>
        <type>int</type>
        <declname>N</declname>
        <defname>N</defname>
        <defval>0</defval>
      </param>
      <param>
        <type>int</type>
        <declname>U</declname>
        <defname>U</defname>
        <defval>1</defval>
      </param>
      <param>
        <type>int</type>
        <declname>I</declname>
        <defname>I</defname>
        <defval>2</defval>
      </param>
      <param>
        <type>int</type>
        <declname>B</declname>
        <defname>B</defname>
        <defval>3</defval>
      </param>
      <param>
        <type>int</type>
        <declname>C</declname>
        <defname>C</defname>
        <defval>4</defval>
      </param>
      <param>
        <type>int</type>
        <declname>O</declname>
        <defname>O</defname>
        <defval>0</defval>
      </param>
      <param>
        <type>std::size_t</type>
        <declname>OpId</declname>
        <defname>OpId</defname>
        <defval>0</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structboost_1_1geometry_1_1detail_1_1turns_1_1less__seg__fraction__other__op_1ab9e2b7ebd618d3e67b861a617c64dd43" prot="public" static="yes" mutable="no">
        <type>const std::size_t</type>
        <definition>const std::size_t boost::geometry::detail::turns::less_seg_fraction_other_op&lt; IdLess, N, U, I, B, C, O, OpId &gt;::other_op_id</definition>
        <argsstring></argsstring>
        <name>other_op_id</name>
        <initializer> (OpId + 1) % 2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/boostorg/boost/boost/geometry/algorithms/detail/turns/compare_turns.hpp" line="40" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/algorithms/detail/turns/compare_turns.hpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structboost_1_1geometry_1_1detail_1_1turns_1_1less__seg__fraction__other__op_1adfa70e5c3fc3588e1c1cc38f0571ef0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>boost::geometry::detail::turns::less_seg_fraction_other_op&lt; IdLess, N, U, I, B, C, O, OpId &gt;::BOOST_STATIC_ASSERT</definition>
        <argsstring>(OpId&lt; 2)</argsstring>
        <name>BOOST_STATIC_ASSERT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/boostorg/boost/boost/geometry/algorithms/detail/turns/compare_turns.hpp" line="39"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1geometry_1_1detail_1_1turns_1_1less__seg__fraction__other__op_1a65ab3f323d572336cc84a276743d926f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Turn</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool boost::geometry::detail::turns::less_seg_fraction_other_op&lt; IdLess, N, U, I, B, C, O, OpId &gt;::operator()</definition>
        <argsstring>(Turn const &amp;left, Turn const &amp;right) const </argsstring>
        <name>operator()</name>
        <param>
          <type>Turn const &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>Turn const &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/boostorg/boost/boost/geometry/algorithms/detail/turns/compare_turns.hpp" line="100" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/algorithms/detail/turns/compare_turns.hpp" bodystart="99" bodyend="105"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structboost_1_1geometry_1_1detail_1_1turns_1_1less__seg__fraction__other__op_1aaf10387de0ae62a44255db6d22389594" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Op</type>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>static int boost::geometry::detail::turns::less_seg_fraction_other_op&lt; IdLess, N, U, I, B, C, O, OpId &gt;::order_op</definition>
        <argsstring>(Op const &amp;op)</argsstring>
        <name>order_op</name>
        <param>
          <type>Op const &amp;</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/boostorg/boost/boost/geometry/algorithms/detail/turns/compare_turns.hpp" line="44" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/algorithms/detail/turns/compare_turns.hpp" bodystart="43" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1geometry_1_1detail_1_1turns_1_1less__seg__fraction__other__op_1a11bb3f5da15e306575da4daa7dba7383" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Turn</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>static bool boost::geometry::detail::turns::less_seg_fraction_other_op&lt; IdLess, N, U, I, B, C, O, OpId &gt;::use_fraction</definition>
        <argsstring>(Turn const &amp;left, Turn const &amp;right)</argsstring>
        <name>use_fraction</name>
        <param>
          <type>Turn const &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>Turn const &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/boostorg/boost/boost/geometry/algorithms/detail/turns/compare_turns.hpp" line="87" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/algorithms/detail/turns/compare_turns.hpp" bodystart="86" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1geometry_1_1detail_1_1turns_1_1less__seg__fraction__other__op_1ab245c62d21fb8c3e6c988ccce38e7fea" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Op</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>static bool boost::geometry::detail::turns::less_seg_fraction_other_op&lt; IdLess, N, U, I, B, C, O, OpId &gt;::use_operation</definition>
        <argsstring>(Op const &amp;left, Op const &amp;right)</argsstring>
        <name>use_operation</name>
        <param>
          <type>Op const &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>Op const &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/boostorg/boost/boost/geometry/algorithms/detail/turns/compare_turns.hpp" line="59" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/algorithms/detail/turns/compare_turns.hpp" bodystart="58" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1geometry_1_1detail_1_1turns_1_1less__seg__fraction__other__op_1a57cfa25524e8af456d6befb83c2a7673" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Turn</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>static bool boost::geometry::detail::turns::less_seg_fraction_other_op&lt; IdLess, N, U, I, B, C, O, OpId &gt;::use_other_id</definition>
        <argsstring>(Turn const &amp;left, Turn const &amp;right)</argsstring>
        <name>use_other_id</name>
        <param>
          <type>Turn const &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>Turn const &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/boostorg/boost/boost/geometry/algorithms/detail/turns/compare_turns.hpp" line="65" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/algorithms/detail/turns/compare_turns.hpp" bodystart="64" bodyend="83"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/travis/build/boostorg/boost/boost/geometry/algorithms/detail/turns/compare_turns.hpp" line="38" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/algorithms/detail/turns/compare_turns.hpp" bodystart="37" bodyend="106"/>
    <listofallmembers>
      <member refid="structboost_1_1geometry_1_1detail_1_1turns_1_1less__seg__fraction__other__op_1adfa70e5c3fc3588e1c1cc38f0571ef0f" prot="public" virt="non-virtual"><scope>boost::geometry::detail::turns::less_seg_fraction_other_op</scope><name>BOOST_STATIC_ASSERT</name></member>
      <member refid="structboost_1_1geometry_1_1detail_1_1turns_1_1less__seg__fraction__other__op_1a65ab3f323d572336cc84a276743d926f" prot="public" virt="non-virtual"><scope>boost::geometry::detail::turns::less_seg_fraction_other_op</scope><name>operator()</name></member>
      <member refid="structboost_1_1geometry_1_1detail_1_1turns_1_1less__seg__fraction__other__op_1aaf10387de0ae62a44255db6d22389594" prot="public" virt="non-virtual"><scope>boost::geometry::detail::turns::less_seg_fraction_other_op</scope><name>order_op</name></member>
      <member refid="structboost_1_1geometry_1_1detail_1_1turns_1_1less__seg__fraction__other__op_1ab9e2b7ebd618d3e67b861a617c64dd43" prot="public" virt="non-virtual"><scope>boost::geometry::detail::turns::less_seg_fraction_other_op</scope><name>other_op_id</name></member>
      <member refid="structboost_1_1geometry_1_1detail_1_1turns_1_1less__seg__fraction__other__op_1a11bb3f5da15e306575da4daa7dba7383" prot="public" virt="non-virtual"><scope>boost::geometry::detail::turns::less_seg_fraction_other_op</scope><name>use_fraction</name></member>
      <member refid="structboost_1_1geometry_1_1detail_1_1turns_1_1less__seg__fraction__other__op_1ab245c62d21fb8c3e6c988ccce38e7fea" prot="public" virt="non-virtual"><scope>boost::geometry::detail::turns::less_seg_fraction_other_op</scope><name>use_operation</name></member>
      <member refid="structboost_1_1geometry_1_1detail_1_1turns_1_1less__seg__fraction__other__op_1a57cfa25524e8af456d6befb83c2a7673" prot="public" virt="non-virtual"><scope>boost::geometry::detail::turns::less_seg_fraction_other_op</scope><name>use_other_id</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
