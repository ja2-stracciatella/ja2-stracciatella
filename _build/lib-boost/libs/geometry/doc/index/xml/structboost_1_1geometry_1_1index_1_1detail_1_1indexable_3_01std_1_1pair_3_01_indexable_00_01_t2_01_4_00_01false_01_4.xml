<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="structboost_1_1geometry_1_1index_1_1detail_1_1indexable_3_01std_1_1pair_3_01_indexable_00_01_t2_01_4_00_01false_01_4" kind="struct" prot="public">
    <compoundname>boost::geometry::index::detail::indexable&lt; std::pair&lt; Indexable, T2 &gt;, false &gt;</compoundname>
    <includes refid="indexable_8hpp" local="no">indexable.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename Indexable</type>
      </param>
      <param>
        <type>typename T2</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structboost_1_1geometry_1_1index_1_1detail_1_1indexable_3_01std_1_1pair_3_01_indexable_00_01_t2_01_4_00_01false_01_4_1a1ca41b24660b0efe5442bc282210edda" prot="public" static="no">
        <type>Indexable const &amp;</type>
        <definition>typedef Indexable const&amp; boost::geometry::index::detail::indexable&lt; std::pair&lt; Indexable, T2 &gt;, false &gt;::result_type</definition>
        <argsstring></argsstring>
        <name>result_type</name>
        <briefdescription>
<para>The type of result returned by function object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/boostorg/boost/boost/geometry/index/indexable.hpp" line="70" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/index/indexable.hpp" bodystart="70" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structboost_1_1geometry_1_1index_1_1detail_1_1indexable_3_01std_1_1pair_3_01_indexable_00_01_t2_01_4_00_01false_01_4_1a93b628d9f35dbb1733a32a54ac85b22f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>boost::geometry::index::detail::indexable&lt; std::pair&lt; Indexable, T2 &gt;, false &gt;::BOOST_MPL_ASSERT_MSG</definition>
        <argsstring>((detail::is_indexable&lt; Indexable &gt;::value), NOT_VALID_INDEXABLE_TYPE,(Indexable))</argsstring>
        <name>BOOST_MPL_ASSERT_MSG</name>
        <param>
          <type>(detail::is_indexable&lt; Indexable &gt;::value)</type>
        </param>
        <param>
          <type>NOT_VALID_INDEXABLE_TYPE</type>
        </param>
        <param>
          <type>(Indexable)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/boostorg/boost/boost/geometry/index/indexable.hpp" line="67"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1geometry_1_1index_1_1detail_1_1indexable_3_01std_1_1pair_3_01_indexable_00_01_t2_01_4_00_01false_01_4_1ac65bb96f9fc0c3ca45c9a89d9fa33b8a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structboost_1_1geometry_1_1index_1_1detail_1_1indexable_3_01std_1_1pair_3_01_indexable_00_01_t2_01_4_00_01false_01_4_1a1ca41b24660b0efe5442bc282210edda" kindref="member">result_type</ref></type>
        <definition>result_type boost::geometry::index::detail::indexable&lt; std::pair&lt; Indexable, T2 &gt;, false &gt;::operator()</definition>
        <argsstring>(std::pair&lt; Indexable, T2 &gt; const &amp;v) const </argsstring>
        <name>operator()</name>
        <param>
          <type>std::pair&lt; Indexable, T2 &gt; const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Return indexable extracted from the value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The indexable. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/boostorg/boost/boost/geometry/index/indexable.hpp" line="79" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/index/indexable.hpp" bodystart="78" bodyend="81"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The function object extracting Indexable from Value. </para>    </briefdescription>
    <detaileddescription>
<para>This specialization translates from std::pair&lt;Indexable, T2&gt;.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Indexable</parametername>
</parameternamelist>
<parameterdescription>
<para>The Indexable type. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T2</parametername>
</parameternamelist>
<parameterdescription>
<para>The second type. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <location file="/home/travis/build/boostorg/boost/boost/geometry/index/indexable.hpp" line="62" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/index/indexable.hpp" bodystart="61" bodyend="82"/>
    <listofallmembers>
      <member refid="structboost_1_1geometry_1_1index_1_1detail_1_1indexable_3_01std_1_1pair_3_01_indexable_00_01_t2_01_4_00_01false_01_4_1a93b628d9f35dbb1733a32a54ac85b22f" prot="public" virt="non-virtual"><scope>boost::geometry::index::detail::indexable&lt; std::pair&lt; Indexable, T2 &gt;, false &gt;</scope><name>BOOST_MPL_ASSERT_MSG</name></member>
      <member refid="structboost_1_1geometry_1_1index_1_1detail_1_1indexable_3_01std_1_1pair_3_01_indexable_00_01_t2_01_4_00_01false_01_4_1ac65bb96f9fc0c3ca45c9a89d9fa33b8a" prot="public" virt="non-virtual"><scope>boost::geometry::index::detail::indexable&lt; std::pair&lt; Indexable, T2 &gt;, false &gt;</scope><name>operator()</name></member>
      <member refid="structboost_1_1geometry_1_1index_1_1detail_1_1indexable_3_01std_1_1pair_3_01_indexable_00_01_t2_01_4_00_01false_01_4_1a1ca41b24660b0efe5442bc282210edda" prot="public" virt="non-virtual"><scope>boost::geometry::index::detail::indexable&lt; std::pair&lt; Indexable, T2 &gt;, false &gt;</scope><name>result_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
