<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="structboost_1_1geometry_1_1index_1_1indexable" kind="struct" prot="public">
    <compoundname>boost::geometry::index::indexable</compoundname>
    <basecompoundref refid="structboost_1_1geometry_1_1index_1_1detail_1_1indexable" prot="public" virt="non-virtual">boost::geometry::index::detail::indexable&lt; Value &gt;</basecompoundref>
    <includes refid="indexable_8hpp" local="no">indexable.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename Value</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structboost_1_1geometry_1_1index_1_1indexable_1af6f21324f6484330b9deb0ee0629f4b4" prot="public" static="no">
        <type><ref refid="structboost_1_1geometry_1_1index_1_1detail_1_1indexable" kindref="compound">detail::indexable</ref>&lt; Value &gt;::<ref refid="structboost_1_1geometry_1_1index_1_1indexable_1af6f21324f6484330b9deb0ee0629f4b4" kindref="member">result_type</ref></type>
        <definition>typedef detail::indexable&lt;Value&gt;::result_type boost::geometry::index::indexable&lt; Value &gt;::result_type</definition>
        <argsstring></argsstring>
        <name>result_type</name>
        <reimplements refid="structboost_1_1geometry_1_1index_1_1detail_1_1indexable_1a5d9b0405e7f8a0d7596b73bf5fcf7ce9">result_type</reimplements>
        <briefdescription>
<para>The type of result returned by function object. It should be const Indexable reference. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/boostorg/boost/boost/geometry/index/indexable.hpp" line="180" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/index/indexable.hpp" bodystart="180" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structboost_1_1geometry_1_1index_1_1indexable_1afa5f2cdc3390a6f1f394890e479df794" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structboost_1_1geometry_1_1index_1_1indexable_1af6f21324f6484330b9deb0ee0629f4b4" kindref="member">result_type</ref></type>
        <definition>result_type boost::geometry::index::indexable&lt; Value &gt;::operator()</definition>
        <argsstring>(Value const &amp;v) const </argsstring>
        <name>operator()</name>
        <reimplements refid="structboost_1_1geometry_1_1index_1_1detail_1_1indexable_1ae3140efa415e00f13a57e17b3438f30c">operator()</reimplements>
        <param>
          <type>Value const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Return indexable extracted from the value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The indexable. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/boostorg/boost/boost/geometry/index/indexable.hpp" line="189" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/index/indexable.hpp" bodystart="188" bodyend="191"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The function object extracting Indexable from Value. </para>    </briefdescription>
    <detaileddescription>
<para>It translates Value object to Indexable object. By default, it can handle Values which are Indexables, std::pair&lt;Indexable, T2&gt;, boost::tuple&lt;Indexable, ...&gt; and std::tuple&lt;Indexable, ...&gt; if STD tuples and variadic templates are supported.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Value</parametername>
</parameternamelist>
<parameterdescription>
<para>The Value type which may be translated directly to the Indexable. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="120">
        <label>boost::geometry::index::indexable&lt; Value &gt;</label>
        <link refid="structboost_1_1geometry_1_1index_1_1indexable"/>
        <childnode refid="121" relation="public-inheritance">
        </childnode>
      </node>
      <node id="121">
        <label>boost::geometry::index::detail::indexable&lt; Value &gt;</label>
        <link refid="structboost_1_1geometry_1_1index_1_1detail_1_1indexable"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="122">
        <label>boost::geometry::index::indexable&lt; Value &gt;</label>
        <link refid="structboost_1_1geometry_1_1index_1_1indexable"/>
        <childnode refid="123" relation="public-inheritance">
        </childnode>
      </node>
      <node id="123">
        <label>boost::geometry::index::detail::indexable&lt; Value &gt;</label>
        <link refid="structboost_1_1geometry_1_1index_1_1detail_1_1indexable"/>
      </node>
    </collaborationgraph>
    <location file="/home/travis/build/boostorg/boost/boost/geometry/index/indexable.hpp" line="178" bodyfile="/home/travis/build/boostorg/boost/boost/geometry/index/indexable.hpp" bodystart="176" bodyend="192"/>
    <listofallmembers>
      <member refid="structboost_1_1geometry_1_1index_1_1detail_1_1indexable_1a6bc3d13759253370873ca5b39457eac6" prot="public" virt="non-virtual"><scope>boost::geometry::index::indexable</scope><name>BOOST_MPL_ASSERT_MSG</name></member>
      <member refid="structboost_1_1geometry_1_1index_1_1indexable_1afa5f2cdc3390a6f1f394890e479df794" prot="public" virt="non-virtual"><scope>boost::geometry::index::indexable</scope><name>operator()</name></member>
      <member refid="structboost_1_1geometry_1_1index_1_1indexable_1af6f21324f6484330b9deb0ee0629f4b4" prot="public" virt="non-virtual"><scope>boost::geometry::index::indexable</scope><name>result_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
